{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Hammer from '@egjs/hammerjs';\nimport { MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD, MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD } from \"./constants\";\nimport DraggingGestureHandler from \"./DraggingGestureHandler\";\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from \"./utils\";\nimport State from \"../State\";\n\nvar PanGestureHandler = function (_DraggingGestureHandl) {\n  _inherits(PanGestureHandler, _DraggingGestureHandl);\n\n  var _super = _createSuper(PanGestureHandler);\n\n  function PanGestureHandler() {\n    _classCallCheck(this, PanGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PanGestureHandler, [{\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(PanGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        direction: this.getDirection()\n      });\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var nextState = _get(_getPrototypeOf(PanGestureHandler.prototype), \"getState\", this).call(this, type);\n\n      if (this.previousState === State.UNDETERMINED && nextState === State.ACTIVE) {\n        return State.BEGAN;\n      }\n\n      return nextState;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function getDirection() {\n      var config = this.getConfig();\n      var activeOffsetXStart = config.activeOffsetXStart,\n          activeOffsetXEnd = config.activeOffsetXEnd,\n          activeOffsetYStart = config.activeOffsetYStart,\n          activeOffsetYEnd = config.activeOffsetYEnd,\n          minDist = config.minDist;\n      var directions = [];\n      var horizontalDirections = [];\n\n      if (!isnan(minDist)) {\n        return Hammer.DIRECTION_ALL;\n      }\n\n      if (!isnan(activeOffsetXStart)) horizontalDirections.push(Hammer.DIRECTION_LEFT);\n      if (!isnan(activeOffsetXEnd)) horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n      if (horizontalDirections.length === 2) horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n      directions = directions.concat(horizontalDirections);\n      var verticalDirections = [];\n      if (!isnan(activeOffsetYStart)) verticalDirections.push(Hammer.DIRECTION_UP);\n      if (!isnan(activeOffsetYEnd)) verticalDirections.push(Hammer.DIRECTION_DOWN);\n      if (verticalDirections.length === 2) verticalDirections = [Hammer.DIRECTION_VERTICAL];\n      directions = directions.concat(verticalDirections);\n\n      if (!directions.length) {\n        return Hammer.DIRECTION_NONE;\n      }\n\n      if (directions[0] === Hammer.DIRECTION_HORIZONTAL && directions[1] === Hammer.DIRECTION_VERTICAL) {\n        return Hammer.DIRECTION_ALL;\n      }\n\n      if (horizontalDirections.length && verticalDirections.length) {\n        return Hammer.DIRECTION_ALL;\n      }\n\n      return directions[0];\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this._hasCustomActivationCriteria) {\n        return {\n          minDistSq: 10\n        };\n      }\n\n      return this.config;\n    }\n  }, {\n    key: \"shouldFailUnderCustomCriteria\",\n    value: function shouldFailUnderCustomCriteria(_ref, criteria) {\n      var deltaX = _ref.deltaX,\n          deltaY = _ref.deltaY;\n      return !isnan(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !isnan(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n  }, {\n    key: \"shouldActivateUnderCustomCriteria\",\n    value: function shouldActivateUnderCustomCriteria(_ref2, criteria) {\n      var deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY,\n          velocity = _ref2.velocity;\n      return !isnan(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !isnan(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !isnan(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !isnan(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) || TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) || TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq);\n    }\n  }, {\n    key: \"shouldMultiFingerPanFail\",\n    value: function shouldMultiFingerPanFail(_ref3) {\n      var pointerLength = _ref3.pointerLength,\n          scale = _ref3.scale,\n          deltaRotation = _ref3.deltaRotation;\n\n      if (pointerLength <= 1) {\n        return false;\n      }\n\n      var deltaScale = Math.abs(scale - 1);\n      var absDeltaRotation = Math.abs(deltaRotation);\n\n      if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        return true;\n      }\n\n      if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(criteria) {\n      return isValidNumber(criteria.minDistSq) || isValidNumber(criteria.minVelocityX) || isValidNumber(criteria.minVelocityY) || isValidNumber(criteria.minVelocitySq) || isValidNumber(criteria.activeOffsetXStart) || isValidNumber(criteria.activeOffsetXEnd) || isValidNumber(criteria.activeOffsetYStart) || isValidNumber(criteria.activeOffsetYEnd);\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(props, recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n\n      var velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n\n      if (this._hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity: velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n\n        return {\n          success: true\n        };\n      }\n\n      return {\n        success: false\n      };\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'pan';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return Hammer.Pan;\n    }\n  }]);\n\n  return PanGestureHandler;\n}(DraggingGestureHandler);\n\nfunction validateConfig() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var isNum = function isNum(v) {\n    return isnan(v) || typeof v === 'number';\n  };\n\n  var isBool = function isBool(v) {\n    return typeof v === 'boolean';\n  };\n\n  var valid = {\n    enabled: isBool,\n    minDistSq: isNum,\n    minVelocityX: isNum,\n    minVelocityY: isNum,\n    minVelocity: isNum,\n    minVelocitySq: isNum,\n    activeOffsetXStart: isNum,\n    activeOffsetXEnd: isNum,\n    failOffsetXStart: isNum,\n    failOffsetXEnd: isNum,\n    activeOffsetYStart: isNum,\n    activeOffsetYEnd: isNum,\n    failOffsetYStart: isNum,\n    failOffsetYEnd: isNum,\n    hasCustomActivationCriteria: isBool,\n    minPointers: isNum,\n    maxPointers: isNum\n  };\n  var keys = Object.keys(valid);\n  var invalidKeys = [];\n\n  for (var _i = 0, _Object$keys = Object.keys(config); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (keys.includes(key)) {\n      if (valid[key](config[key])) {\n        console.warn('Invalid type: ' + key + ': ' + config[key]);\n      }\n    } else {\n      invalidKeys.push(key);\n    }\n  }\n\n  if (invalidKeys.length) {\n    throw new Error('Invalid config props found: ' + invalidKeys.join(', '));\n  }\n\n  return config;\n}\n\nexport default PanGestureHandler;","map":{"version":3,"names":["Hammer","MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD","MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD","DraggingGestureHandler","isValidNumber","isnan","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","State","PanGestureHandler","direction","getDirection","type","nextState","previousState","UNDETERMINED","ACTIVE","BEGAN","config","getConfig","activeOffsetXStart","activeOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","minDist","directions","horizontalDirections","DIRECTION_ALL","push","DIRECTION_LEFT","DIRECTION_RIGHT","length","DIRECTION_HORIZONTAL","concat","verticalDirections","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_NONE","_hasCustomActivationCriteria","minDistSq","criteria","deltaX","deltaY","failOffsetXStart","failOffsetXEnd","failOffsetYStart","failOffsetYEnd","velocity","x","y","minVelocityX","minVelocityY","minVelocitySq","pointerLength","scale","deltaRotation","deltaScale","Math","abs","absDeltaRotation","props","recognizer","inputData","shouldFailUnderCustomCriteria","failed","velocityX","velocityY","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","maxPointers","success","Pan","validateConfig","isNum","v","isBool","valid","enabled","minVelocity","hasCustomActivationCriteria","minPointers","keys","Object","invalidKeys","key","includes","console","warn","Error","join"],"sources":["D:/GitHub/mern-stack-ecommerce/easy-shop/node_modules/react-native-gesture-handler/web/PanGestureHandler.js"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\r\n\r\nimport {\r\n  MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD,\r\n  MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD,\r\n} from './constants';\r\nimport DraggingGestureHandler from './DraggingGestureHandler';\r\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\r\nimport State from '../State';\r\n\r\nclass PanGestureHandler extends DraggingGestureHandler {\r\n  get name() {\r\n    return 'pan';\r\n  }\r\n\r\n  get NativeGestureClass() {\r\n    return Hammer.Pan;\r\n  }\r\n\r\n  getHammerConfig() {\r\n    return {\r\n      ...super.getHammerConfig(),\r\n      direction: this.getDirection(),\r\n    };\r\n  }\r\n\r\n  getState(type) {\r\n    const nextState = super.getState(type);\r\n    // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\r\n    if (\r\n      this.previousState === State.UNDETERMINED &&\r\n      nextState === State.ACTIVE\r\n    ) {\r\n      return State.BEGAN;\r\n    }\r\n    return nextState;\r\n  }\r\n\r\n  getDirection() {\r\n    const config = this.getConfig();\r\n    const {\r\n      activeOffsetXStart,\r\n      activeOffsetXEnd,\r\n      activeOffsetYStart,\r\n      activeOffsetYEnd,\r\n      minDist,\r\n    } = config;\r\n    let directions = [];\r\n    let horizontalDirections = [];\r\n\r\n    if (!isnan(minDist)) {\r\n      return Hammer.DIRECTION_ALL;\r\n    }\r\n\r\n    if (!isnan(activeOffsetXStart))\r\n      horizontalDirections.push(Hammer.DIRECTION_LEFT);\r\n    if (!isnan(activeOffsetXEnd))\r\n      horizontalDirections.push(Hammer.DIRECTION_RIGHT);\r\n    if (horizontalDirections.length === 2)\r\n      horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\r\n\r\n    directions = directions.concat(horizontalDirections);\r\n    let verticalDirections = [];\r\n\r\n    if (!isnan(activeOffsetYStart))\r\n      verticalDirections.push(Hammer.DIRECTION_UP);\r\n    if (!isnan(activeOffsetYEnd))\r\n      verticalDirections.push(Hammer.DIRECTION_DOWN);\r\n\r\n    if (verticalDirections.length === 2)\r\n      verticalDirections = [Hammer.DIRECTION_VERTICAL];\r\n\r\n    directions = directions.concat(verticalDirections);\r\n\r\n    if (!directions.length) {\r\n      return Hammer.DIRECTION_NONE;\r\n    }\r\n    if (\r\n      directions[0] === Hammer.DIRECTION_HORIZONTAL &&\r\n      directions[1] === Hammer.DIRECTION_VERTICAL\r\n    ) {\r\n      return Hammer.DIRECTION_ALL;\r\n    }\r\n    if (horizontalDirections.length && verticalDirections.length) {\r\n      return Hammer.DIRECTION_ALL;\r\n    }\r\n\r\n    return directions[0];\r\n  }\r\n\r\n  getConfig() {\r\n    if (!this._hasCustomActivationCriteria) {\r\n      // Default config\r\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\r\n      return {\r\n        minDistSq: 10,\r\n      };\r\n    }\r\n    return this.config;\r\n  }\r\n\r\n  shouldFailUnderCustomCriteria({ deltaX, deltaY }, criteria) {\r\n    return (\r\n      (!isnan(criteria.failOffsetXStart) &&\r\n        deltaX < criteria.failOffsetXStart) ||\r\n      (!isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd) ||\r\n      (!isnan(criteria.failOffsetYStart) &&\r\n        deltaY < criteria.failOffsetYStart) ||\r\n      (!isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd)\r\n    );\r\n  }\r\n\r\n  shouldActivateUnderCustomCriteria({ deltaX, deltaY, velocity }, criteria) {\r\n    return (\r\n      (!isnan(criteria.activeOffsetXStart) &&\r\n        deltaX < criteria.activeOffsetXStart) ||\r\n      (!isnan(criteria.activeOffsetXEnd) &&\r\n        deltaX > criteria.activeOffsetXEnd) ||\r\n      (!isnan(criteria.activeOffsetYStart) &&\r\n        deltaY < criteria.activeOffsetYStart) ||\r\n      (!isnan(criteria.activeOffsetYEnd) &&\r\n        deltaY > criteria.activeOffsetYEnd) ||\r\n      TEST_MIN_IF_NOT_NAN(\r\n        VEC_LEN_SQ({ x: deltaX, y: deltaY }),\r\n        criteria.minDistSq\r\n      ) ||\r\n      TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) ||\r\n      TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) ||\r\n      TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq)\r\n    );\r\n  }\r\n\r\n  shouldMultiFingerPanFail({ pointerLength, scale, deltaRotation }) {\r\n    if (pointerLength <= 1) {\r\n      return false;\r\n    }\r\n\r\n    // Test if the pan had too much pinching or rotating.\r\n    const deltaScale = Math.abs(scale - 1);\r\n    const absDeltaRotation = Math.abs(deltaRotation);\r\n    if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\r\n      // > If the threshold doesn't seem right.\r\n      // You can log the value which it failed at here:\r\n      return true;\r\n    }\r\n    if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\r\n      // > If the threshold doesn't seem right.\r\n      // You can log the value which it failed at here:\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  updateHasCustomActivationCriteria(criteria) {\r\n    return (\r\n      isValidNumber(criteria.minDistSq) ||\r\n      isValidNumber(criteria.minVelocityX) ||\r\n      isValidNumber(criteria.minVelocityY) ||\r\n      isValidNumber(criteria.minVelocitySq) ||\r\n      isValidNumber(criteria.activeOffsetXStart) ||\r\n      isValidNumber(criteria.activeOffsetXEnd) ||\r\n      isValidNumber(criteria.activeOffsetYStart) ||\r\n      isValidNumber(criteria.activeOffsetYEnd)\r\n    );\r\n  }\r\n\r\n  isGestureEnabledForEvent(props, recognizer, inputData) {\r\n    if (this.shouldFailUnderCustomCriteria(inputData, props)) {\r\n      return { failed: true };\r\n    }\r\n\r\n    const velocity = { x: inputData.velocityX, y: inputData.velocityY };\r\n    if (\r\n      this._hasCustomActivationCriteria &&\r\n      this.shouldActivateUnderCustomCriteria(\r\n        { deltaX: inputData.deltaX, deltaY: inputData.deltaY, velocity },\r\n        props\r\n      )\r\n    ) {\r\n      if (\r\n        this.shouldMultiFingerPanFail({\r\n          pointerLength: inputData.maxPointers,\r\n          scale: inputData.scale,\r\n          deltaRotation: inputData.deltaRotation,\r\n        })\r\n      ) {\r\n        return {\r\n          failed: true,\r\n        };\r\n      }\r\n      return { success: true };\r\n    }\r\n    return { success: false };\r\n  }\r\n}\r\n\r\nfunction validateConfig(config = {}) {\r\n  const isNum = v => isnan(v) || typeof v === 'number';\r\n  const isBool = v => typeof v === 'boolean';\r\n\r\n  const valid = {\r\n    enabled: isBool,\r\n    minDistSq: isNum,\r\n    minVelocityX: isNum,\r\n    minVelocityY: isNum,\r\n    // TODO: Bacon: remove `minVelocity`\r\n    minVelocity: isNum,\r\n    minVelocitySq: isNum,\r\n    activeOffsetXStart: isNum,\r\n    activeOffsetXEnd: isNum,\r\n    failOffsetXStart: isNum,\r\n    failOffsetXEnd: isNum,\r\n    activeOffsetYStart: isNum,\r\n    activeOffsetYEnd: isNum,\r\n    failOffsetYStart: isNum,\r\n    failOffsetYEnd: isNum,\r\n    hasCustomActivationCriteria: isBool,\r\n    minPointers: isNum,\r\n    maxPointers: isNum,\r\n  };\r\n  const keys = Object.keys(valid);\r\n\r\n  let invalidKeys = [];\r\n  for (const key of Object.keys(config)) {\r\n    if (keys.includes(key)) {\r\n      if (valid[key](config[key])) {\r\n        console.warn('Invalid type: ' + key + ': ' + config[key]);\r\n      }\r\n    } else {\r\n      invalidKeys.push(key);\r\n    }\r\n  }\r\n\r\n  if (invalidKeys.length) {\r\n    throw new Error('Invalid config props found: ' + invalidKeys.join(', '));\r\n  }\r\n  return config;\r\n}\r\n\r\nexport default PanGestureHandler;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}