{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nfunction isScreenReaderEnabled() {\n  return new Promise(function (resolve, reject) {\n    resolve(true);\n  });\n}\n\nvar prefersReducedMotionMedia = canUseDOM ? window.matchMedia('(prefers-reduced-motion: reduce)') : null;\n\nfunction isReduceMotionEnabled() {\n  return new Promise(function (resolve, reject) {\n    resolve(prefersReducedMotionMedia ? prefersReducedMotionMedia.matches : true);\n  });\n}\n\nvar handlers = {};\nvar AccessibilityInfo = {\n  isScreenReaderEnabled: isScreenReaderEnabled,\n  isReduceMotionEnabled: isReduceMotionEnabled,\n  fetch: isScreenReaderEnabled,\n  addEventListener: function addEventListener(eventName, handler) {\n    if (eventName === 'reduceMotionChanged') {\n      if (!prefersReducedMotionMedia) {\n        return;\n      }\n\n      var listener = function listener(event) {\n        handler(event.matches);\n      };\n\n      prefersReducedMotionMedia.addEventListener('change', listener);\n      handlers[handler] = listener;\n    }\n\n    return {\n      remove: function remove() {\n        return AccessibilityInfo.removeEventListener(eventName, handler);\n      }\n    };\n  },\n  setAccessibilityFocus: function setAccessibilityFocus(reactTag) {},\n  announceForAccessibility: function announceForAccessibility(announcement) {},\n  removeEventListener: function removeEventListener(eventName, handler) {\n    if (eventName === 'reduceMotionChanged') {\n      var listener = handlers[handler];\n\n      if (!listener || !prefersReducedMotionMedia) {\n        return;\n      }\n\n      prefersReducedMotionMedia.removeEventListener('change', listener);\n    }\n\n    return;\n  }\n};\nexport default AccessibilityInfo;","map":{"version":3,"names":["canUseDOM","isScreenReaderEnabled","Promise","resolve","reject","prefersReducedMotionMedia","window","matchMedia","isReduceMotionEnabled","matches","handlers","AccessibilityInfo","fetch","addEventListener","eventName","handler","listener","event","remove","removeEventListener","setAccessibilityFocus","reactTag","announceForAccessibility","announcement"],"sources":["D:/GitHub/mern-stack-ecommerce/easy-shop/node_modules/react-native-web/dist/exports/AccessibilityInfo/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\r\n\r\nfunction isScreenReaderEnabled() {\r\n  return new Promise(function (resolve, reject) {\r\n    resolve(true);\r\n  });\r\n}\r\n\r\nvar prefersReducedMotionMedia = canUseDOM ? window.matchMedia('(prefers-reduced-motion: reduce)') : null;\r\n\r\nfunction isReduceMotionEnabled() {\r\n  return new Promise(function (resolve, reject) {\r\n    resolve(prefersReducedMotionMedia ? prefersReducedMotionMedia.matches : true);\r\n  });\r\n}\r\n\r\nvar handlers = {};\r\nvar AccessibilityInfo = {\r\n  /**\r\n   * Query whether a screen reader is currently enabled.\r\n   *\r\n   * Returns a promise which resolves to a boolean.\r\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\r\n   */\r\n  isScreenReaderEnabled: isScreenReaderEnabled,\r\n\r\n  /**\r\n   * Query whether the user prefers reduced motion.\r\n   *\r\n   * Returns a promise which resolves to a boolean.\r\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\r\n   */\r\n  isReduceMotionEnabled: isReduceMotionEnabled,\r\n\r\n  /**\r\n   * Deprecated\r\n   */\r\n  fetch: isScreenReaderEnabled,\r\n\r\n  /**\r\n   * Add an event handler. Supported events: reduceMotionChanged\r\n   */\r\n  addEventListener: function addEventListener(eventName, handler) {\r\n    if (eventName === 'reduceMotionChanged') {\r\n      if (!prefersReducedMotionMedia) {\r\n        return;\r\n      }\r\n\r\n      var listener = function listener(event) {\r\n        handler(event.matches);\r\n      };\r\n\r\n      prefersReducedMotionMedia.addEventListener('change', listener);\r\n      handlers[handler] = listener;\r\n    }\r\n\r\n    return {\r\n      remove: function remove() {\r\n        return AccessibilityInfo.removeEventListener(eventName, handler);\r\n      }\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Set accessibility focus to a react component.\r\n   */\r\n  setAccessibilityFocus: function setAccessibilityFocus(reactTag) {},\r\n\r\n  /**\r\n   * Post a string to be announced by the screen reader.\r\n   */\r\n  announceForAccessibility: function announceForAccessibility(announcement) {},\r\n\r\n  /**\r\n   * Remove an event handler.\r\n   */\r\n  removeEventListener: function removeEventListener(eventName, handler) {\r\n    if (eventName === 'reduceMotionChanged') {\r\n      var listener = handlers[handler];\r\n\r\n      if (!listener || !prefersReducedMotionMedia) {\r\n        return;\r\n      }\r\n\r\n      prefersReducedMotionMedia.removeEventListener('change', listener);\r\n    }\r\n\r\n    return;\r\n  }\r\n};\r\nexport default AccessibilityInfo;"],"mappings":"AAQA,SAASA,SAAT,QAA0B,+BAA1B;;AAEA,SAASC,qBAAT,GAAiC;EAC/B,OAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;IAC5CD,OAAO,CAAC,IAAD,CAAP;EACD,CAFM,CAAP;AAGD;;AAED,IAAIE,yBAAyB,GAAGL,SAAS,GAAGM,MAAM,CAACC,UAAP,CAAkB,kCAAlB,CAAH,GAA2D,IAApG;;AAEA,SAASC,qBAAT,GAAiC;EAC/B,OAAO,IAAIN,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;IAC5CD,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB,CAACI,OAA7B,GAAuC,IAAjE,CAAP;EACD,CAFM,CAAP;AAGD;;AAED,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,iBAAiB,GAAG;EAOtBV,qBAAqB,EAAEA,qBAPD;EAetBO,qBAAqB,EAAEA,qBAfD;EAoBtBI,KAAK,EAAEX,qBApBe;EAyBtBY,gBAAgB,EAAE,SAASA,gBAAT,CAA0BC,SAA1B,EAAqCC,OAArC,EAA8C;IAC9D,IAAID,SAAS,KAAK,qBAAlB,EAAyC;MACvC,IAAI,CAACT,yBAAL,EAAgC;QAC9B;MACD;;MAED,IAAIW,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;QACtCF,OAAO,CAACE,KAAK,CAACR,OAAP,CAAP;MACD,CAFD;;MAIAJ,yBAAyB,CAACQ,gBAA1B,CAA2C,QAA3C,EAAqDG,QAArD;MACAN,QAAQ,CAACK,OAAD,CAAR,GAAoBC,QAApB;IACD;;IAED,OAAO;MACLE,MAAM,EAAE,SAASA,MAAT,GAAkB;QACxB,OAAOP,iBAAiB,CAACQ,mBAAlB,CAAsCL,SAAtC,EAAiDC,OAAjD,CAAP;MACD;IAHI,CAAP;EAKD,CA5CqB;EAiDtBK,qBAAqB,EAAE,SAASA,qBAAT,CAA+BC,QAA/B,EAAyC,CAAE,CAjD5C;EAsDtBC,wBAAwB,EAAE,SAASA,wBAAT,CAAkCC,YAAlC,EAAgD,CAAE,CAtDtD;EA2DtBJ,mBAAmB,EAAE,SAASA,mBAAT,CAA6BL,SAA7B,EAAwCC,OAAxC,EAAiD;IACpE,IAAID,SAAS,KAAK,qBAAlB,EAAyC;MACvC,IAAIE,QAAQ,GAAGN,QAAQ,CAACK,OAAD,CAAvB;;MAEA,IAAI,CAACC,QAAD,IAAa,CAACX,yBAAlB,EAA6C;QAC3C;MACD;;MAEDA,yBAAyB,CAACc,mBAA1B,CAA8C,QAA9C,EAAwDH,QAAxD;IACD;;IAED;EACD;AAvEqB,CAAxB;AAyEA,eAAeL,iBAAf"},"metadata":{},"sourceType":"module"}