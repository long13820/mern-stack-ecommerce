{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Hammer from '@egjs/hammerjs';\nimport { DEG_RAD } from \"./constants\";\nimport IndiscreteGestureHandler from \"./IndiscreteGestureHandler\";\n\nvar RotationGestureHandler = function (_IndiscreteGestureHan) {\n  _inherits(RotationGestureHandler, _IndiscreteGestureHan);\n\n  var _super = _createSuper(RotationGestureHandler);\n\n  function RotationGestureHandler() {\n    _classCallCheck(this, RotationGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RotationGestureHandler, [{\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref) {\n      var rotation = _ref.rotation,\n          velocity = _ref.velocity,\n          center = _ref.center;\n      return {\n        rotation: (rotation - this.initialRotation) * DEG_RAD,\n        anchorX: center.x,\n        anchorY: center.y,\n        velocity: velocity\n      };\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'rotate';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return Hammer.Rotate;\n    }\n  }]);\n\n  return RotationGestureHandler;\n}(IndiscreteGestureHandler);\n\nexport default RotationGestureHandler;","map":{"version":3,"names":["Hammer","DEG_RAD","IndiscreteGestureHandler","RotationGestureHandler","rotation","velocity","center","initialRotation","anchorX","x","anchorY","y","Rotate"],"sources":["D:/GitHub/mern-stack-ecommerce/easy-shop/node_modules/react-native-gesture-handler/web/RotationGestureHandler.js"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\r\n\r\nimport { DEG_RAD } from './constants';\r\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\r\n\r\nclass RotationGestureHandler extends IndiscreteGestureHandler {\r\n  get name() {\r\n    return 'rotate';\r\n  }\r\n\r\n  get NativeGestureClass() {\r\n    return Hammer.Rotate;\r\n  }\r\n\r\n  transformNativeEvent({ rotation, velocity, center }) {\r\n    return {\r\n      rotation: (rotation - this.initialRotation) * DEG_RAD,\r\n      anchorX: center.x,\r\n      anchorY: center.y,\r\n      velocity,\r\n    };\r\n  }\r\n}\r\nexport default RotationGestureHandler;\r\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AAEA,SAASC,OAAT;AACA,OAAOC,wBAAP;;IAEMC,sB;;;;;;;;;;;;;+CASiD;MAAA,IAA9BC,QAA8B,QAA9BA,QAA8B;MAAA,IAApBC,QAAoB,QAApBA,QAAoB;MAAA,IAAVC,MAAU,QAAVA,MAAU;MACnD,OAAO;QACLF,QAAQ,EAAE,CAACA,QAAQ,GAAG,KAAKG,eAAjB,IAAoCN,OADzC;QAELO,OAAO,EAAEF,MAAM,CAACG,CAFX;QAGLC,OAAO,EAAEJ,MAAM,CAACK,CAHX;QAILN,QAAQ,EAARA;MAJK,CAAP;IAMD;;;wBAfU;MACT,OAAO,QAAP;IACD;;;wBAEwB;MACvB,OAAOL,MAAM,CAACY,MAAd;IACD;;;;EAPkCV,wB;;AAkBrC,eAAeC,sBAAf"},"metadata":{},"sourceType":"module"}