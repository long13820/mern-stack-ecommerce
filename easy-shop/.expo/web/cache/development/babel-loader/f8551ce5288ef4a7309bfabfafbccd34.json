{"ast":null,"code":"import { Direction } from \"./web/constants\";\nimport FlingGestureHandler from \"./web/FlingGestureHandler\";\nimport LongPressGestureHandler from \"./web/LongPressGestureHandler\";\nimport NativeViewGestureHandler from \"./web/NativeViewGestureHandler\";\nimport * as NodeManager from \"./web/NodeManager\";\nimport PanGestureHandler from \"./web/PanGestureHandler\";\nimport PinchGestureHandler from \"./web/PinchGestureHandler\";\nimport RotationGestureHandler from \"./web/RotationGestureHandler\";\nimport TapGestureHandler from \"./web/TapGestureHandler\";\nvar Gestures = {\n  PanGestureHandler: PanGestureHandler,\n  RotationGestureHandler: RotationGestureHandler,\n  PinchGestureHandler: PinchGestureHandler,\n  TapGestureHandler: TapGestureHandler,\n  NativeViewGestureHandler: NativeViewGestureHandler,\n  LongPressGestureHandler: LongPressGestureHandler,\n  FlingGestureHandler: FlingGestureHandler\n};\nexport default {\n  Direction: Direction,\n  handleSetJSResponder: function handleSetJSResponder(tag, blockNativeResponder) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder: function handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler: function createGestureHandler(handlerName, handlerTag, config) {\n    if (!(handlerName in Gestures)) throw new Error(\"react-native-gesture-handler: \" + handlerName + \" is not supported on web.\");\n    var GestureClass = Gestures[handlerName];\n    NodeManager.createGestureHandler(handlerTag, new GestureClass());\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler: function attachGestureHandler(handlerTag, newView) {\n    NodeManager.getHandler(handlerTag).setView(newView);\n  },\n  updateGestureHandler: function updateGestureHandler(handlerTag, newConfig) {\n    NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n  },\n  getGestureHandlerNode: function getGestureHandlerNode(handlerTag) {\n    return NodeManager.getHandler(handlerTag);\n  },\n  dropGestureHandler: function dropGestureHandler(handlerTag) {\n    NodeManager.dropGestureHandler(handlerTag);\n  }\n};","map":{"version":3,"names":["Direction","FlingGestureHandler","LongPressGestureHandler","NativeViewGestureHandler","NodeManager","PanGestureHandler","PinchGestureHandler","RotationGestureHandler","TapGestureHandler","Gestures","handleSetJSResponder","tag","blockNativeResponder","console","warn","handleClearJSResponder","createGestureHandler","handlerName","handlerTag","config","Error","GestureClass","updateGestureHandler","attachGestureHandler","newView","getHandler","setView","newConfig","updateGestureConfig","getGestureHandlerNode","dropGestureHandler"],"sources":["D:/GitHub/mern-stack-ecommerce/easy-shop/node_modules/react-native-gesture-handler/RNGestureHandlerModule.web.js"],"sourcesContent":["import { Direction } from './web/constants';\r\nimport FlingGestureHandler from './web/FlingGestureHandler';\r\nimport LongPressGestureHandler from './web/LongPressGestureHandler';\r\nimport NativeViewGestureHandler from './web/NativeViewGestureHandler';\r\nimport * as NodeManager from './web/NodeManager';\r\nimport PanGestureHandler from './web/PanGestureHandler';\r\nimport PinchGestureHandler from './web/PinchGestureHandler';\r\nimport RotationGestureHandler from './web/RotationGestureHandler';\r\nimport TapGestureHandler from './web/TapGestureHandler';\r\n\r\nconst Gestures = {\r\n  PanGestureHandler,\r\n  RotationGestureHandler,\r\n  PinchGestureHandler,\r\n  TapGestureHandler,\r\n  NativeViewGestureHandler,\r\n  LongPressGestureHandler,\r\n  FlingGestureHandler,\r\n  // ForceTouchGestureHandler,\r\n};\r\n\r\nexport default {\r\n  Direction,\r\n  handleSetJSResponder(tag, blockNativeResponder) {\r\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\r\n  },\r\n  handleClearJSResponder() {\r\n    console.warn('handleClearJSResponder: ');\r\n  },\r\n  createGestureHandler(handlerName, handlerTag, config) {\r\n    if (!(handlerName in Gestures))\r\n      throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);\r\n    const GestureClass = Gestures[handlerName];\r\n    NodeManager.createGestureHandler(handlerTag, new GestureClass());\r\n    this.updateGestureHandler(handlerTag, config);\r\n  },\r\n  attachGestureHandler(handlerTag, newView) {\r\n    NodeManager.getHandler(handlerTag).setView(newView);\r\n  },\r\n  updateGestureHandler(handlerTag, newConfig) {\r\n    NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\r\n  },\r\n  getGestureHandlerNode(handlerTag) {\r\n    return NodeManager.getHandler(handlerTag);\r\n  },\r\n  dropGestureHandler(handlerTag) {\r\n    NodeManager.dropGestureHandler(handlerTag);\r\n  },\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAT;AACA,OAAOC,mBAAP;AACA,OAAOC,uBAAP;AACA,OAAOC,wBAAP;AACA,OAAO,KAAKC,WAAZ;AACA,OAAOC,iBAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,iBAAP;AAEA,IAAMC,QAAQ,GAAG;EACfJ,iBAAiB,EAAjBA,iBADe;EAEfE,sBAAsB,EAAtBA,sBAFe;EAGfD,mBAAmB,EAAnBA,mBAHe;EAIfE,iBAAiB,EAAjBA,iBAJe;EAKfL,wBAAwB,EAAxBA,wBALe;EAMfD,uBAAuB,EAAvBA,uBANe;EAOfD,mBAAmB,EAAnBA;AAPe,CAAjB;AAWA,eAAe;EACbD,SAAS,EAATA,SADa;EAEbU,oBAFa,gCAEQC,GAFR,EAEaC,oBAFb,EAEmC;IAC9CC,OAAO,CAACC,IAAR,CAAa,wBAAb,EAAuCH,GAAvC,EAA4CC,oBAA5C;EACD,CAJY;EAKbG,sBALa,oCAKY;IACvBF,OAAO,CAACC,IAAR,CAAa,0BAAb;EACD,CAPY;EAQbE,oBARa,gCAQQC,WARR,EAQqBC,UARrB,EAQiCC,MARjC,EAQyC;IACpD,IAAI,EAAEF,WAAW,IAAIR,QAAjB,CAAJ,EACE,MAAM,IAAIW,KAAJ,oCAA2CH,WAA3C,+BAAN;IACF,IAAMI,YAAY,GAAGZ,QAAQ,CAACQ,WAAD,CAA7B;IACAb,WAAW,CAACY,oBAAZ,CAAiCE,UAAjC,EAA6C,IAAIG,YAAJ,EAA7C;IACA,KAAKC,oBAAL,CAA0BJ,UAA1B,EAAsCC,MAAtC;EACD,CAdY;EAebI,oBAfa,gCAeQL,UAfR,EAeoBM,OAfpB,EAe6B;IACxCpB,WAAW,CAACqB,UAAZ,CAAuBP,UAAvB,EAAmCQ,OAAnC,CAA2CF,OAA3C;EACD,CAjBY;EAkBbF,oBAlBa,gCAkBQJ,UAlBR,EAkBoBS,SAlBpB,EAkB+B;IAC1CvB,WAAW,CAACqB,UAAZ,CAAuBP,UAAvB,EAAmCU,mBAAnC,CAAuDD,SAAvD;EACD,CApBY;EAqBbE,qBArBa,iCAqBSX,UArBT,EAqBqB;IAChC,OAAOd,WAAW,CAACqB,UAAZ,CAAuBP,UAAvB,CAAP;EACD,CAvBY;EAwBbY,kBAxBa,8BAwBMZ,UAxBN,EAwBkB;IAC7Bd,WAAW,CAAC0B,kBAAZ,CAA+BZ,UAA/B;EACD;AA1BY,CAAf"},"metadata":{},"sourceType":"module"}