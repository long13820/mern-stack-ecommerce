{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\GitHub\\\\mern-stack-ecommerce\\\\easy-shop\\\\node_modules\\\\react-native-drawer\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport tween from \"./tweener\";\nvar deviceScreen = Dimensions.get('window');\nvar DOUBLE_TAP_INTERVAL = 500;\nvar TAP_DURATION = 250;\nvar propsWhomRequireUpdate = ['closedDrawerOffset', 'openDrawerOffset', 'type', 'styles'];\n\nvar Drawer = function (_Component) {\n  _inherits(Drawer, _Component);\n\n  var _super = _createSuper(Drawer);\n\n  function Drawer() {\n    var _this;\n\n    _classCallCheck(this, Drawer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._length = 0;\n    _this._prevLength = 0;\n    _this._offsetOpen = 0;\n    _this._offsetClosed = 0;\n    _this._open = false;\n    _this._panning = false;\n    _this._tweenPending = false;\n    _this._activeTween = null;\n    _this._lastPress = 0;\n    _this._panStartTime = 0;\n    _this._syncAfterUpdate = false;\n    _this._interactionHandle = null;\n    _this.state = {\n      viewport: deviceScreen\n    };\n\n    _this.getChildContext = function () {\n      return {\n        drawer: _assertThisInitialized(_this)\n      };\n    };\n\n    _this.initialize = function (props) {\n      var fullLength = _this.getDeviceLength();\n\n      _this._offsetClosed = _this.getClosedOffset(props, _this.state.viewport);\n      _this._offsetOpen = _this.getOpenOffset(props, _this.state.viewport);\n      _this._prevLength = _this._length;\n      var styles = {\n        container: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        }\n      };\n      styles.main = _extends({\n        position: 'absolute',\n        borderWidth: 0\n      }, _this.isLeftOrRightSide() ? {\n        top: 0\n      } : {\n        left: 0\n      }, _this.props.styles.main);\n      styles.drawer = _extends({\n        position: 'absolute',\n        borderWidth: 0\n      }, _this.isLeftOrRightSide() ? {\n        top: 0\n      } : {\n        left: 0\n      }, _this.props.styles.drawer);\n\n      if (props.initializeOpen || props.open) {\n        _this._open = true;\n        _this._length = fullLength - _this._offsetOpen;\n        styles.main[_this.props.side] = 0;\n        styles.drawer[_this.props.side] = 0;\n        if (props.type === 'static') styles.main[_this.props.side] = fullLength - _this._offsetOpen;\n        if (props.type === 'displace') styles.main[_this.props.side] = fullLength - _this._offsetOpen;\n      } else {\n        _this._open = false;\n        _this._length = _this._offsetClosed;\n        styles.main[_this.props.side] = _this._offsetClosed;\n        if (props.type === 'static') styles.drawer[_this.props.side] = 0;\n        if (props.type === 'overlay') styles.drawer[_this.props.side] = _this._offsetClosed + _this._offsetOpen - fullLength;\n        if (props.type === 'displace') styles.drawer[_this.props.side] = -fullLength + _this._offsetClosed + _this._offsetOpen;\n      }\n\n      if (_this.main) {\n        _this.drawer.setNativeProps({\n          style: {\n            left: styles.drawer.left\n          }\n        });\n\n        _this.main.setNativeProps({\n          style: {\n            left: styles.main.left\n          }\n        });\n      } else {\n        _this.stylesheet = StyleSheet.create(styles);\n        _this.responder = PanResponder.create({\n          onStartShouldSetPanResponder: _this.onStartShouldSetPanResponder,\n          onStartShouldSetPanResponderCapture: _this.onStartShouldSetPanResponderCapture,\n          onMoveShouldSetPanResponder: _this.onMoveShouldSetPanResponder,\n          onMoveShouldSetPanResponderCapture: _this.onMoveShouldSetPanResponderCapture,\n          onPanResponderMove: _this.onPanResponderMove,\n          onPanResponderRelease: _this.onPanResponderRelease,\n          onPanResponderTerminate: _this.onPanResponderTerminate\n        });\n      }\n\n      _this.resync(null, props);\n    };\n\n    _this.updatePosition = function () {\n      var mainProps = {};\n      var drawerProps = {};\n\n      var ratio = (_this._length - _this._offsetClosed) / (_this.getOpenLength() - _this._offsetClosed);\n\n      switch (_this.props.type) {\n        case 'overlay':\n          drawerProps[_this.props.side] = -_this.getDeviceLength() + _this._offsetOpen + _this._length;\n          mainProps[_this.props.side] = _this._offsetClosed;\n          break;\n\n        case 'static':\n          mainProps[_this.props.side] = _this._length;\n          drawerProps[_this.props.side] = 0;\n          break;\n\n        case 'displace':\n          mainProps[_this.props.side] = _this._length;\n          drawerProps[_this.props.side] = -_this.getDeviceLength() + _this._length + _this._offsetOpen;\n          break;\n      }\n\n      var mainOverlayProps = null;\n      var drawerOverlayProps = null;\n\n      if (_this.props.tweenHandler) {\n        var propsFrag = _this.props.tweenHandler(ratio, _this.props.side);\n\n        mainProps = _extends(mainProps, propsFrag.main);\n        drawerProps = _extends(drawerProps, propsFrag.drawer);\n        mainOverlayProps = propsFrag.mainOverlay;\n        drawerOverlayProps = propsFrag.drawerOverlay;\n      }\n\n      if (_this.main && _this.drawer && _this.mainOverlay && _this.drawerOverlay) {\n        _this.drawer.setNativeProps({\n          style: drawerProps\n        });\n\n        _this.main.setNativeProps({\n          style: mainProps\n        });\n\n        if (mainOverlayProps) _this.mainOverlay.setNativeProps({\n          style: mainOverlayProps\n        });\n        if (drawerOverlayProps) _this.drawerOverlay.setNativeProps({\n          style: drawerOverlayProps\n        });\n      }\n    };\n\n    _this.onPanResponderTerminate = function (e, gestureState) {\n      _this._panning = false;\n      _this.shouldOpenDrawer(_this.getGestureDelta(gestureState)) ? _this.open() : _this.close();\n    };\n\n    _this.onStartShouldSetPanResponderCapture = function (e, gestureState) {\n      if (_this.shouldCaptureGestures()) return _this.processShouldSet(e, gestureState);\n      return false;\n    };\n\n    _this.onStartShouldSetPanResponder = function (e, gestureState) {\n      if (!_this.shouldCaptureGestures()) return _this.processShouldSet(e, gestureState);\n      return false;\n    };\n\n    _this.onMoveShouldSetPanResponderCapture = function (e, gestureState) {\n      if (_this.shouldCaptureGestures() && _this.props.negotiatePan) return _this.processMoveShouldSet(e, gestureState);\n      return false;\n    };\n\n    _this.onMoveShouldSetPanResponder = function (e, gestureState) {\n      if (!_this.shouldCaptureGestures() && _this.props.negotiatePan) return _this.processMoveShouldSet(e, gestureState);\n      return false;\n    };\n\n    _this.onPanResponderMove = function (e, gestureState) {\n      var delta = _this.getGestureDelta(gestureState);\n\n      if (!_this.props.acceptPan) return false;\n      if (_this._open ^ delta < 0 ^ _this.isRightOrBottomSide()) return false;\n      delta = _this.isRightOrBottomSide() ? delta * -1 : delta;\n      var length = _this._prevLength + delta;\n      length = Math.min(length, _this.getOpenLength());\n      length = Math.max(length, _this.getClosedLength());\n      length = Math.round(length * 2) / 2;\n      _this._length = length;\n\n      _this.updatePosition();\n\n      if (!_this._panning) {\n        _this.props.onDragStart && _this.props.onDragStart();\n      }\n\n      _this._panning = true;\n    };\n\n    _this.onPanResponderRelease = function (e, gestureState) {\n      var delta = _this.getGestureDelta(gestureState);\n\n      _this._panning = false;\n      if (Date.now() - _this._panStartTime < TAP_DURATION) _this.processTapGestures();\n      if (Math.abs(delta) < 50 && _this._activeTween) return;\n      _this.shouldOpenDrawer(delta) ? _this.open() : _this.close();\n\n      _this.updatePosition();\n\n      _this._prevLength = _this._length;\n    };\n\n    _this.processShouldSet = function (e, gestureState) {\n      var inMask = _this.testPanResponderMask(e, gestureState);\n\n      if (!inMask) return false;\n      if (!_this._open && Math.abs(gestureState.dy) >= Math.abs(gestureState.dx)) return false;\n      _this._panStartTime = Date.now();\n      if (inMask && _this.shouldCaptureGestures()) return true;\n      if (_this.props.negotiatePan) return false;\n      if (!_this.props.acceptPan) return false;\n\n      _this.terminateActiveTween();\n\n      return true;\n    };\n\n    _this.processMoveShouldSet = function (e, gestureState) {\n      var inMask = _this.testPanResponderMask(e, gestureState);\n\n      if (!inMask && (!_this.props.acceptPanOnDrawer || _this._open === false)) return false;\n      if (!_this.props.acceptPan) return false;\n      if (!_this.props.negotiatePan || _this.props.disabled || !_this.props.acceptPan || _this._panning) return false;\n\n      var delta = _this.getGestureDelta(gestureState);\n\n      var deltaOppositeAxis = _this.getGestureDeltaOppositeAxis(gestureState);\n\n      var swipeToLeftOrTop = delta < 0 ? true : false;\n      var swipeToRightOrBottom = delta > 0 ? true : false;\n      var swipeOppositeAxis = Math.abs(deltaOppositeAxis) >= Math.abs(delta) ? true : false;\n      var swipeInCloseDirection = _this.isLeftOrTopSide() ? swipeToLeftOrTop : swipeToRightOrBottom;\n\n      if (swipeOppositeAxis || _this._open && !swipeInCloseDirection || !_this._open && swipeInCloseDirection) {\n        return false;\n      }\n\n      _this.terminateActiveTween();\n\n      return true;\n    };\n\n    _this.processTapGestures = function () {\n      if (_this._activeTween) return false;\n\n      if (_this.props.acceptTap || _this.props.tapToClose && _this._open) {\n        _this._open ? _this.close() : _this.open();\n        return true;\n      }\n\n      if (_this.props.acceptDoubleTap) {\n        var now = new Date().getTime();\n        var timeDelta = now - _this._lastPress;\n        _this._lastPress = now;\n\n        if (timeDelta < DOUBLE_TAP_INTERVAL) {\n          _this._open ? _this.close() : _this.open();\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    _this.testPanResponderMask = function (e, gestureState) {\n      if (_this.props.disabled) return false;\n      if (_this.context.drawer && _this.context.drawer._open) return false;\n      if (_this._childDrawer && _this._childDrawer._open) return false;\n      var pos0 = _this.isLeftOrRightSide() ? e.nativeEvent.pageX : e.nativeEvent.pageY;\n      var deltaOpen = _this.isLeftOrTopSide() ? _this.getDeviceLength() - pos0 : pos0;\n      var deltaClose = _this.isLeftOrTopSide() ? pos0 : _this.getDeviceLength() - pos0;\n      if (_this._open && deltaOpen > _this.getOpenMask()) return false;\n      if (!_this._open && deltaClose > _this.getClosedMask()) return false;\n      return true;\n    };\n\n    _this.terminateActiveTween = function () {\n      if (_this._activeTween) {\n        _this._activeTween.terminate();\n\n        _this._activeTween = null;\n      }\n    };\n\n    _this.open = function (type, cb) {\n      var start = _this._length;\n\n      var end = _this.getOpenLength();\n\n      if (_this._activeTween) return;\n      if (type !== 'force' && start - end === 0 && _this._open === true) return;\n      _this.props.onOpenStart && _this.props.onOpenStart();\n\n      _this.setInteractionHandle();\n\n      _this._activeTween = tween({\n        start: _this._length,\n        end: _this.getOpenLength(),\n        duration: _this.props.tweenDuration,\n        easingType: _this.props.tweenEasing,\n        onFrame: function onFrame(tweenValue) {\n          _this._length = Math.round(tweenValue * 2) / 2;\n\n          _this.updatePosition();\n        },\n        onEnd: function onEnd() {\n          _this._activeTween = null;\n          _this._open = true;\n          _this._prevLength = _this._length;\n\n          _this.adjustForCaptureGestures();\n\n          _this.props.onOpen();\n\n          _this.clearInteractionHandle();\n\n          if (typeof type === 'function') {\n            type();\n          } else cb && cb();\n        }\n      });\n    };\n\n    _this.close = function (type, cb) {\n      var start = _this._length;\n\n      var end = _this.getClosedLength();\n\n      if (_this._activeTween) return;\n      if (type !== 'force' && start - end === 0 && _this._open === false) return;\n      _this.props.onCloseStart && _this.props.onCloseStart();\n\n      _this.setInteractionHandle();\n\n      _this._activeTween = tween({\n        start: start,\n        end: end,\n        easingType: _this.props.tweenEasing,\n        duration: _this.props.tweenDuration,\n        onFrame: function onFrame(tweenValue) {\n          _this._length = Math.round(tweenValue * 2) / 2;\n\n          _this.updatePosition();\n        },\n        onEnd: function onEnd() {\n          _this._activeTween = null;\n          _this._open = false;\n          _this._prevLength = _this._length;\n\n          _this.adjustForCaptureGestures();\n\n          _this.props.onClose();\n\n          _this.clearInteractionHandle();\n\n          if (typeof type === 'function') {\n            type();\n          } else cb && cb();\n        }\n      });\n    };\n\n    _this.toggle = function () {\n      _this._open ? _this.close() : _this.open();\n    };\n\n    _this.handleSetViewport = function (e) {\n      var viewport = e.nativeEvent.layout;\n      var oldViewport = _this.state.viewport;\n      if (viewport.width === oldViewport.width && viewport.height === oldViewport.height) return;\n      var didRotationChange = viewport.width !== oldViewport.width;\n\n      _this.resync(viewport, null, didRotationChange);\n    };\n\n    _this.resync = function (viewport, props, didRotationChange) {\n      if (didRotationChange) _this._syncAfterUpdate = true;\n      viewport = viewport || _this.state.viewport;\n      props = props || _this.props;\n      _this._offsetClosed = _this.getClosedOffset(props, viewport);\n      _this._offsetOpen = _this.getOpenOffset(props, viewport);\n\n      _this.setState({\n        viewport: viewport\n      });\n    };\n\n    _this.requiresResync = function (nextProps) {\n      for (var i = 0; i < propsWhomRequireUpdate.length; i++) {\n        var key = propsWhomRequireUpdate[i];\n        if (_this.props[key] !== nextProps[key]) return true;\n      }\n    };\n\n    _this.getDeviceLength = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isLeftOrRightSide() ? viewport.width : viewport.height;\n    };\n\n    _this.getOpenLength = function () {\n      return _this.getDeviceLength() - _this._offsetOpen;\n    };\n\n    _this.getClosedLength = function () {\n      return _this._offsetClosed;\n    };\n\n    _this.getMainWidth = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isLeftOrRightSide() ? viewport.width - _this._offsetClosed : viewport.width;\n    };\n\n    _this.getMainHeight = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isTopOrBottomSide() ? viewport.height - _this._offsetClosed : viewport.height;\n    };\n\n    _this.getDrawerWidth = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isLeftOrRightSide() ? viewport.width - _this._offsetOpen : viewport.width;\n    };\n\n    _this.getDrawerHeight = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isTopOrBottomSide() ? viewport.height - _this._offsetOpen : viewport.height;\n    };\n\n    _this.getOpenMask = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      if (_this.props.panCloseMask && _this.props.panCloseMask % 1 === 0) return _this.props.panCloseMask;\n      if (_this.props.panCloseMask) return _this.getDeviceLength(viewport) * _this.props.panCloseMask;\n      return Math.max(0.05, _this._offsetOpen);\n    };\n\n    _this.getClosedMask = function () {\n      if (_this.props.panOpenMask && _this.props.panOpenMask % 1 === 0) return _this.props.panOpenMask;\n      if (_this.props.panOpenMask) return _this.getDeviceLength() * _this.props.panOpenMask;\n      return Math.max(0.05, _this._offsetClosed);\n    };\n\n    _this.getOpenOffset = function (props, viewport) {\n      if (typeof props.openDrawerOffset === 'function') return props.openDrawerOffset(viewport);\n      return props.openDrawerOffset > 1 || props.openDrawerOffset < 0 ? props.openDrawerOffset : props.openDrawerOffset * _this.getDeviceLength(viewport);\n    };\n\n    _this.getClosedOffset = function (props, viewport) {\n      if (typeof props.closedDrawerOffset === 'function') return props.closedDrawerOffset(viewport);\n      return props.closedDrawerOffset > 1 || props.closedDrawerOffset < 0 ? props.closedDrawerOffset : props.closedDrawerOffset * _this.getDeviceLength(viewport);\n    };\n\n    _this.getGestureDelta = function (gestureState) {\n      return _this.isLeftOrRightSide() ? gestureState.dx : gestureState.dy;\n    };\n\n    _this.getGestureDeltaOppositeAxis = function (gestureState) {\n      return _this.isLeftOrRightSide() ? gestureState.dy : gestureState.dx;\n    };\n\n    _this.isLeftOrRightSide = function () {\n      if (I18nManager.isRTL) {\n        return [\"right\", \"left\"].includes(_this.props.side);\n      } else {\n        return [\"left\", \"right\"].includes(_this.props.side);\n      }\n    };\n\n    _this.isTopOrBottomSide = function () {\n      return [\"top\", \"bottom\"].includes(_this.props.side);\n    };\n\n    _this.isLeftOrTopSide = function () {\n      var side = \"left\";\n\n      if (I18nManager.isRTL) {\n        side = \"right\";\n      }\n\n      return [side, \"top\"].includes(_this.props.side);\n    };\n\n    _this.isRightOrBottomSide = function () {\n      var side = \"right\";\n\n      if (I18nManager.isRTL) {\n        side = \"left\";\n      }\n\n      return [side, \"bottom\"].includes(_this.props.side);\n    };\n\n    return _this;\n  }\n\n  _createClass(Drawer, [{\n    key: \"_registerChildDrawer\",\n    value: function _registerChildDrawer(drawer) {\n      this._childDrawer = drawer;\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.context.drawer) this.context.drawer._registerChildDrawer(this);\n      if (this.props.openDrawerThreshold && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: openDrawerThreshold is obsolete. Use panThreshold instead.');\n      if (this.props.panStartCompensation && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: panStartCompensation is deprecated.');\n      if (this.props.relativeDrag && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: relativeDrag is deprecated.');\n      this.initialize(this.props);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.requiresResync(nextProps)) this.resync(null, nextProps);\n\n      if (nextProps.open !== null && this._open !== nextProps.open) {\n        this._syncAfterUpdate = true;\n        this._open = nextProps.open;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this._syncAfterUpdate) {\n        this._syncAfterUpdate = false;\n        this._open ? this.open('force') : this.close('force');\n      }\n    }\n  }, {\n    key: \"shouldOpenDrawer\",\n    value: function shouldOpenDrawer(delta) {\n      var hasActiveHeading = this._open ^ delta > 0 ^ this.isRightOrBottomSide();\n      if (!hasActiveHeading) return this._open;else return this._open ^ Math.abs(delta) > this.getDeviceLength() * this.props.panThreshold;\n    }\n  }, {\n    key: \"shouldCaptureGestures\",\n    value: function shouldCaptureGestures() {\n      if (this.props.captureGestures === true) return true;\n      if (this.props.captureGestures === 'closed' && this._open === false) return true;\n      if (this.props.captureGestures === 'open' && this._open === true) return true;\n      return false;\n    }\n  }, {\n    key: \"adjustForCaptureGestures\",\n    value: function adjustForCaptureGestures() {\n      if (!this.props.captureGestures) return;\n      var shouldCapture = this.shouldCaptureGestures();\n\n      if (this.mainOverlay && this.drawerOverlay) {\n        this.mainOverlay.setNativeProps({\n          pointerEvents: shouldCapture && this._open ? 'auto' : 'none'\n        });\n        this.drawerOverlay.setNativeProps({\n          pointerEvents: shouldCapture && !this._open ? 'auto' : 'none'\n        });\n      }\n    }\n  }, {\n    key: \"setInteractionHandle\",\n    value: function setInteractionHandle() {\n      if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle);\n      if (this.props.useInteractionManager) this._interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  }, {\n    key: \"clearInteractionHandle\",\n    value: function clearInteractionHandle() {\n      if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var first = this.props.type === 'overlay' ? this.renderMain() : this.renderDrawer();\n      var second = this.props.type === 'overlay' ? this.renderDrawer() : this.renderMain();\n      return React.createElement(View, {\n        key: \"drawerContainer\",\n        onLayout: this.handleSetViewport,\n        style: this.stylesheet.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 7\n        }\n      }, first, second);\n    }\n  }, {\n    key: \"renderMain\",\n    value: function renderMain() {\n      var _this2 = this;\n\n      return React.createElement(View, _extends({}, this.responder.panHandlers, {\n        key: \"main\",\n        ref: function ref(c) {\n          return _this2.main = c;\n        },\n        style: [this.stylesheet.main, {\n          height: this.getMainHeight(),\n          width: this.getMainWidth()\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 7\n        }\n      }), this.props.children, React.createElement(View, {\n        pointerEvents: this._open && this.shouldCaptureGestures() ? 'auto' : 'none',\n        ref: function ref(c) {\n          return _this2.mainOverlay = c;\n        },\n        style: [styles.overlay, this.props.styles && this.props.styles.mainOverlay],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderDrawer\",\n    value: function renderDrawer() {\n      var _this3 = this;\n\n      return React.createElement(View, _extends({}, this.responder.panHandlers, {\n        key: \"drawer\",\n        ref: function ref(c) {\n          return _this3.drawer = c;\n        },\n        elevation: this.props.elevation,\n        style: [this.stylesheet.drawer, {\n          height: this.getDrawerHeight(),\n          width: this.getDrawerWidth()\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 7\n        }\n      }), this.props.content, React.createElement(View, {\n        pointerEvents: !this._open && this.shouldCaptureGestures() ? 'auto' : 'none',\n        ref: function ref(c) {\n          return _this3.drawerOverlay = c;\n        },\n        style: [styles.overlay, this.props.styles && this.props.styles.drawerOverlay],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Drawer;\n}(Component);\n\nDrawer.tweenPresets = {\n  parallax: function parallax(ratio) {\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'left';\n\n    var drawer = _defineProperty({}, side, -150 * (1 - ratio));\n\n    return {\n      drawer: drawer\n    };\n  }\n};\nDrawer.propTypes = {\n  acceptDoubleTap: PropTypes.bool,\n  acceptPan: PropTypes.bool,\n  acceptTap: PropTypes.bool,\n  acceptPanOnDrawer: PropTypes.bool,\n  captureGestures: PropTypes.oneOf([true, false, 'open', 'closed']),\n  children: PropTypes.node,\n  closedDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  content: PropTypes.node,\n  disabled: PropTypes.bool,\n  elevation: PropTypes.number,\n  initializeOpen: PropTypes.bool,\n  open: PropTypes.bool,\n  negotiatePan: PropTypes.bool,\n  onClose: PropTypes.func,\n  onCloseStart: PropTypes.func,\n  onOpen: PropTypes.func,\n  onOpenStart: PropTypes.func,\n  onDragStart: PropTypes.func,\n  openDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  panThreshold: PropTypes.number,\n  panCloseMask: PropTypes.number,\n  panOpenMask: PropTypes.number,\n  side: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n  styles: PropTypes.object,\n  tapToClose: PropTypes.bool,\n  tweenDuration: PropTypes.number,\n  tweenEasing: PropTypes.string,\n  tweenHandler: PropTypes.func,\n  type: PropTypes.oneOf(['overlay', 'static', 'displace']),\n  useInteractionManager: PropTypes.bool,\n  panStartCompensation: PropTypes.bool,\n  openDrawerThreshold: PropTypes.any\n};\nDrawer.defaultProps = {\n  open: null,\n  initializeOpen: false,\n  type: 'displace',\n  closedDrawerOffset: 0,\n  openDrawerOffset: 0,\n  panThreshold: 0.25,\n  panOpenMask: null,\n  panCloseMask: null,\n  tweenHandler: null,\n  tweenDuration: 250,\n  tweenEasing: 'linear',\n  disabled: false,\n  negotiatePan: false,\n  captureGestures: 'open',\n  acceptDoubleTap: false,\n  acceptTap: false,\n  acceptPan: true,\n  acceptPanOnDrawer: true,\n  tapToClose: false,\n  styles: {},\n  elevation: 0,\n  onOpen: function onOpen() {},\n  onClose: function onClose() {},\n  side: 'left',\n  useInteractionManager: false\n};\nDrawer.contextTypes = {\n  drawer: PropTypes.object\n};\nDrawer.childContextTypes = {\n  drawer: PropTypes.object\n};\nexport { Drawer as default };\nvar styles = StyleSheet.create({\n  overlay: {\n    right: 0,\n    left: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"names":["React","Component","PropTypes","tween","deviceScreen","Dimensions","get","DOUBLE_TAP_INTERVAL","TAP_DURATION","propsWhomRequireUpdate","Drawer","_length","_prevLength","_offsetOpen","_offsetClosed","_open","_panning","_tweenPending","_activeTween","_lastPress","_panStartTime","_syncAfterUpdate","_interactionHandle","state","viewport","getChildContext","drawer","initialize","props","fullLength","getDeviceLength","getClosedOffset","getOpenOffset","styles","container","flex","justifyContent","alignItems","main","position","borderWidth","isLeftOrRightSide","top","left","initializeOpen","open","side","type","setNativeProps","style","stylesheet","StyleSheet","create","responder","PanResponder","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","resync","updatePosition","mainProps","drawerProps","ratio","getOpenLength","mainOverlayProps","drawerOverlayProps","tweenHandler","propsFrag","mainOverlay","drawerOverlay","e","gestureState","shouldOpenDrawer","getGestureDelta","close","shouldCaptureGestures","processShouldSet","negotiatePan","processMoveShouldSet","delta","acceptPan","isRightOrBottomSide","length","Math","min","max","getClosedLength","round","onDragStart","Date","now","processTapGestures","abs","inMask","testPanResponderMask","dy","dx","terminateActiveTween","acceptPanOnDrawer","disabled","deltaOppositeAxis","getGestureDeltaOppositeAxis","swipeToLeftOrTop","swipeToRightOrBottom","swipeOppositeAxis","swipeInCloseDirection","isLeftOrTopSide","acceptTap","tapToClose","acceptDoubleTap","getTime","timeDelta","context","_childDrawer","pos0","nativeEvent","pageX","pageY","deltaOpen","deltaClose","getOpenMask","getClosedMask","terminate","cb","start","end","onOpenStart","setInteractionHandle","duration","tweenDuration","easingType","tweenEasing","onFrame","tweenValue","onEnd","adjustForCaptureGestures","onOpen","clearInteractionHandle","onCloseStart","onClose","toggle","handleSetViewport","layout","oldViewport","width","height","didRotationChange","setState","requiresResync","nextProps","i","key","getMainWidth","getMainHeight","isTopOrBottomSide","getDrawerWidth","getDrawerHeight","panCloseMask","panOpenMask","openDrawerOffset","closedDrawerOffset","I18nManager","isRTL","includes","_registerChildDrawer","openDrawerThreshold","process","env","NODE_ENV","console","error","panStartCompensation","relativeDrag","hasActiveHeading","panThreshold","captureGestures","shouldCapture","pointerEvents","InteractionManager","useInteractionManager","createInteractionHandle","first","renderMain","renderDrawer","second","panHandlers","c","children","overlay","elevation","content","tweenPresets","parallax","propTypes","bool","oneOf","node","oneOfType","number","func","object","string","any","defaultProps","contextTypes","childContextTypes","right","bottom","backgroundColor"],"sources":["D:/GitHub/mern-stack-ecommerce/easy-shop/node_modules/react-native-drawer/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { PanResponder, View, StyleSheet, Dimensions, InteractionManager, I18nManager } from 'react-native'\r\n\r\nimport tween from './tweener'\r\n\r\nlet deviceScreen = Dimensions.get('window')\r\nconst DOUBLE_TAP_INTERVAL = 500\r\nconst TAP_DURATION = 250\r\nconst propsWhomRequireUpdate = ['closedDrawerOffset', 'openDrawerOffset', 'type', 'styles']\r\n\r\nexport default class Drawer extends Component {\r\n\r\n  _length = 0;\r\n  _prevLength = 0;\r\n  _offsetOpen = 0;\r\n  _offsetClosed = 0;\r\n  _open = false;\r\n  _panning = false;\r\n  _tweenPending = false;\r\n  _activeTween = null;\r\n  _lastPress = 0;\r\n  _panStartTime = 0;\r\n  _syncAfterUpdate = false;\r\n  _interactionHandle = null;\r\n\r\n  static tweenPresets = {\r\n    parallax: (ratio, side = 'left') => {\r\n      let drawer = { [side] : -150 * (1 - ratio)}\r\n      return { drawer }\r\n    }\r\n  };\r\n\r\n  state = {\r\n    viewport: deviceScreen\r\n  };\r\n\r\n  static propTypes = {\r\n    acceptDoubleTap: PropTypes.bool,\r\n    acceptPan: PropTypes.bool,\r\n    acceptTap: PropTypes.bool,\r\n    acceptPanOnDrawer: PropTypes.bool,\r\n    captureGestures: PropTypes.oneOf([true, false, 'open', 'closed']),\r\n    children: PropTypes.node,\r\n    closedDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\r\n    content: PropTypes.node,\r\n    disabled: PropTypes.bool,\r\n    elevation: PropTypes.number,\r\n    initializeOpen: PropTypes.bool,\r\n    open: PropTypes.bool,\r\n    negotiatePan: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onCloseStart: PropTypes.func,\r\n    onOpen: PropTypes.func,\r\n    onOpenStart: PropTypes.func,\r\n    onDragStart: PropTypes.func,\r\n    openDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\r\n    panThreshold: PropTypes.number,\r\n    panCloseMask: PropTypes.number,\r\n    panOpenMask: PropTypes.number,\r\n    side: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\r\n    styles: PropTypes.object,\r\n    tapToClose: PropTypes.bool,\r\n    tweenDuration: PropTypes.number,\r\n    tweenEasing: PropTypes.string,\r\n    tweenHandler: PropTypes.func,\r\n    type: PropTypes.oneOf(['overlay', 'static', 'displace']),\r\n    useInteractionManager: PropTypes.bool,\r\n\r\n    // deprecated\r\n    panStartCompensation: PropTypes.bool,\r\n    openDrawerThreshold: PropTypes.any,\r\n  };\r\n\r\n  static defaultProps = {\r\n    open: null,\r\n    initializeOpen: false,\r\n\r\n    type: 'displace',\r\n    closedDrawerOffset: 0,\r\n    openDrawerOffset: 0,\r\n    panThreshold: 0.25, // @TODO consider rename to panThreshold\r\n    panOpenMask: null, // defaults to closedDrawerOffset\r\n    panCloseMask: null, // defaults to openDrawerOffset\r\n\r\n    tweenHandler: null,\r\n    tweenDuration: 250,\r\n    tweenEasing: 'linear',\r\n\r\n    disabled: false,\r\n    negotiatePan: false,\r\n    captureGestures: 'open',\r\n    acceptDoubleTap: false,\r\n    acceptTap: false,\r\n    acceptPan: true,\r\n    acceptPanOnDrawer: true,\r\n    tapToClose: false,\r\n\r\n    styles: {},\r\n    elevation: 0,\r\n    onOpen: () => {},\r\n    onClose: () => {},\r\n    side: 'left',\r\n\r\n    useInteractionManager: false,\r\n  };\r\n\r\n  /*** CONTEXT ***/\r\n  static contextTypes = { drawer: PropTypes.object };\r\n  static childContextTypes = { drawer: PropTypes.object };\r\n  getChildContext = () => ({ drawer: this });\r\n  /*** END CONTEXT ***/\r\n\r\n  _registerChildDrawer(drawer) {\r\n    // Store child drawer for gesture disambiguation with multi drawer\r\n    // @TODO make cleaner, generalize to work with 3+ drawers, prop to disable/configure\r\n    this._childDrawer = drawer\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.context.drawer) this.context.drawer._registerChildDrawer(this)\r\n    if (this.props.openDrawerThreshold && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: openDrawerThreshold is obsolete. Use panThreshold instead.')\r\n    if (this.props.panStartCompensation && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: panStartCompensation is deprecated.')\r\n    if (this.props.relativeDrag && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: relativeDrag is deprecated.')\r\n    this.initialize(this.props)\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.requiresResync(nextProps)) this.resync(null, nextProps)\r\n\r\n    if (nextProps.open !== null && this._open !== nextProps.open) {\r\n      this._syncAfterUpdate = true\r\n      this._open = nextProps.open\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this._syncAfterUpdate) {\r\n      this._syncAfterUpdate = false\r\n      this._open ? this.open('force') : this.close('force')\r\n    }\r\n  }\r\n\r\n  initialize = (props) => {\r\n    let fullLength = this.getDeviceLength();\r\n    this._offsetClosed = this.getClosedOffset(props, this.state.viewport)\r\n    this._offsetOpen = this.getOpenOffset(props, this.state.viewport)\r\n    // add function options\r\n    this._prevLength = this._length\r\n\r\n    let styles = {\r\n      container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      },\r\n    }\r\n\r\n    styles.main = Object.assign({\r\n      position: 'absolute',\r\n      borderWidth: 0,\r\n    }, this.isLeftOrRightSide() ? {top: 0} : {left: 0}, this.props.styles.main)\r\n\r\n    styles.drawer = Object.assign({\r\n      position: 'absolute',\r\n      borderWidth:0,\r\n    }, this.isLeftOrRightSide() ? {top: 0} : {left: 0}, this.props.styles.drawer)\r\n\r\n    if (props.initializeOpen || props.open) { // open\r\n      this._open = true\r\n      this._length = fullLength - this._offsetOpen\r\n      styles.main[this.props.side] = 0\r\n      styles.drawer[this.props.side] = 0\r\n      if (props.type === 'static') styles.main[this.props.side] = fullLength - this._offsetOpen\r\n      if (props.type === 'displace') styles.main[this.props.side] = fullLength - this._offsetOpen\r\n    } else { // closed\r\n      this._open = false\r\n      this._length = this._offsetClosed\r\n      styles.main[this.props.side] = this._offsetClosed\r\n      if (props.type === 'static') styles.drawer[this.props.side] = 0\r\n      if (props.type === 'overlay') styles.drawer[this.props.side] = this._offsetClosed + this._offsetOpen - fullLength\r\n      if (props.type === 'displace') styles.drawer[this.props.side] = - fullLength + this._offsetClosed + this._offsetOpen\r\n    }\r\n\r\n    if (this.main) {\r\n      this.drawer.setNativeProps({ style: {left: styles.drawer.left}})\r\n      this.main.setNativeProps({ style: {left: styles.main.left}})\r\n    } else {\r\n      this.stylesheet = StyleSheet.create(styles)\r\n      this.responder = PanResponder.create({\r\n        onStartShouldSetPanResponder: this.onStartShouldSetPanResponder,\r\n        onStartShouldSetPanResponderCapture: this.onStartShouldSetPanResponderCapture,\r\n        onMoveShouldSetPanResponder: this.onMoveShouldSetPanResponder,\r\n        onMoveShouldSetPanResponderCapture: this.onMoveShouldSetPanResponderCapture,\r\n        onPanResponderMove: this.onPanResponderMove,\r\n        onPanResponderRelease: this.onPanResponderRelease,\r\n\tonPanResponderTerminate: this.onPanResponderTerminate\r\n      })\r\n    }\r\n\r\n    this.resync(null, props)\r\n  };\r\n\r\n  updatePosition = () => {\r\n    let mainProps = {}\r\n    let drawerProps = {}\r\n    let ratio = (this._length - this._offsetClosed) / (this.getOpenLength() - this._offsetClosed)\r\n\r\n    switch (this.props.type) {\r\n      case 'overlay':\r\n        drawerProps[this.props.side] = -this.getDeviceLength() + this._offsetOpen + this._length\r\n        mainProps[this.props.side] = this._offsetClosed\r\n        break\r\n      case 'static':\r\n        mainProps[this.props.side] = this._length\r\n        drawerProps[this.props.side] = 0\r\n        break\r\n      case 'displace':\r\n        mainProps[this.props.side] = this._length\r\n        drawerProps[this.props.side] = -this.getDeviceLength() + this._length + this._offsetOpen\r\n        break\r\n    }\r\n\r\n    let mainOverlayProps = null\r\n    let drawerOverlayProps = null\r\n    if (this.props.tweenHandler) {\r\n      let propsFrag = this.props.tweenHandler(ratio, this.props.side)\r\n      mainProps = Object.assign(mainProps, propsFrag.main)\r\n      drawerProps = Object.assign(drawerProps, propsFrag.drawer)\r\n      mainOverlayProps = propsFrag.mainOverlay\r\n      drawerOverlayProps = propsFrag.drawerOverlay\r\n    }\r\n    if (this.main && this.drawer && this.mainOverlay && this.drawerOverlay) {\r\n      this.drawer.setNativeProps({style: drawerProps})\r\n      this.main.setNativeProps({style: mainProps})\r\n      if (mainOverlayProps) this.mainOverlay.setNativeProps({style: mainOverlayProps})\r\n      if (drawerOverlayProps) this.drawerOverlay.setNativeProps({style: drawerOverlayProps})\r\n    }\r\n  };\r\n\r\n  shouldOpenDrawer(delta) {\r\n    let hasActiveHeading = this._open ^ delta > 0 ^ this.isRightOrBottomSide()\r\n    if (!hasActiveHeading) return this._open\r\n    else return this._open ^ Math.abs(delta) > this.getDeviceLength() * this.props.panThreshold\r\n  }\r\n\r\n  onPanResponderTerminate = (e, gestureState) => {\r\n    this._panning = false\r\n    this.shouldOpenDrawer(this.getGestureDelta(gestureState)) ? this.open() : this.close()\r\n  };\r\n\r\n  onStartShouldSetPanResponderCapture = (e, gestureState) => {\r\n    if (this.shouldCaptureGestures()) return this.processShouldSet(e, gestureState)\r\n    return false\r\n  };\r\n\r\n  onStartShouldSetPanResponder = (e, gestureState) => {\r\n    if (!this.shouldCaptureGestures()) return this.processShouldSet(e, gestureState)\r\n    return false\r\n  };\r\n\r\n  onMoveShouldSetPanResponderCapture = (e, gestureState) => {\r\n    if (this.shouldCaptureGestures() && this.props.negotiatePan) return this.processMoveShouldSet(e, gestureState)\r\n    return false\r\n  };\r\n\r\n  onMoveShouldSetPanResponder = (e, gestureState) => {\r\n    if (!this.shouldCaptureGestures() && this.props.negotiatePan) return this.processMoveShouldSet(e, gestureState)\r\n    return false\r\n  };\r\n\r\n  onPanResponderMove = (e, gestureState) => {\r\n    let delta = this.getGestureDelta(gestureState);\r\n    if (!this.props.acceptPan) return false\r\n\r\n    //Do nothing if we are panning the wrong way\r\n    if (this._open ^ delta < 0 ^ this.isRightOrBottomSide()) return false\r\n\r\n    delta = this.isRightOrBottomSide() ? delta * -1 : delta\r\n    let length = this._prevLength + delta\r\n    length = Math.min(length, this.getOpenLength())\r\n    length = Math.max(length, this.getClosedLength())\r\n    length = Math.round(length*2)/2\r\n    this._length = length\r\n\r\n    this.updatePosition()\r\n    if (!this._panning) {\r\n      this.props.onDragStart && this.props.onDragStart();\r\n    }\r\n    this._panning = true\r\n  };\r\n\r\n  onPanResponderRelease = (e, gestureState) => {\r\n    let delta = this.getGestureDelta(gestureState);\r\n    this._panning = false\r\n    if (Date.now() - this._panStartTime < TAP_DURATION) this.processTapGestures()\r\n    if (Math.abs(delta) < 50 && this._activeTween) return\r\n\r\n    this.shouldOpenDrawer(delta) ? this.open() : this.close()\r\n    this.updatePosition()\r\n    this._prevLength = this._length\r\n  };\r\n\r\n  processShouldSet = (e, gestureState) => {\r\n    let inMask = this.testPanResponderMask(e, gestureState)\r\n    if (!inMask) return false\r\n    // skip gesture process if we have mostly vertical swipe\r\n    if (!this._open && Math.abs(gestureState.dy) >= Math.abs(gestureState.dx)) return false\r\n    this._panStartTime = Date.now()\r\n    if (inMask && this.shouldCaptureGestures()) return true\r\n    if (this.props.negotiatePan) return false\r\n    if (!this.props.acceptPan) return false\r\n    this.terminateActiveTween()\r\n    return true\r\n  };\r\n\r\n  processMoveShouldSet = (e, gestureState) => {\r\n    let inMask = this.testPanResponderMask(e, gestureState)\r\n    if (!inMask && (!this.props.acceptPanOnDrawer || this._open === false )) return false\r\n    if (!this.props.acceptPan) return false\r\n\r\n    if (!this.props.negotiatePan || this.props.disabled || !this.props.acceptPan || this._panning) return false\r\n    let delta = this.getGestureDelta(gestureState)\r\n    let deltaOppositeAxis = this.getGestureDeltaOppositeAxis(gestureState)\r\n    let swipeToLeftOrTop = (delta < 0) ? true : false\r\n    let swipeToRightOrBottom = (delta > 0) ? true : false\r\n    let swipeOppositeAxis = (Math.abs(deltaOppositeAxis) >= Math.abs(delta)) ? true : false\r\n    let swipeInCloseDirection = (this.isLeftOrTopSide()) ? swipeToLeftOrTop : swipeToRightOrBottom\r\n    if (swipeOppositeAxis || (this._open && !swipeInCloseDirection) || (!this._open && swipeInCloseDirection)) {\r\n      return false\r\n    }\r\n\r\n    this.terminateActiveTween()\r\n    return true\r\n  };\r\n\r\n  processTapGestures = () => {\r\n    if (this._activeTween) return false // disable tap gestures during tween\r\n    if (this.props.acceptTap || (this.props.tapToClose && this._open)) {\r\n      this._open ? this.close() : this.open()\r\n      return true\r\n    }\r\n    if (this.props.acceptDoubleTap) {\r\n      let now = new Date().getTime()\r\n      let timeDelta = now - this._lastPress\r\n      this._lastPress = now\r\n      if (timeDelta < DOUBLE_TAP_INTERVAL) {\r\n        this._open ? this.close() : this.open()\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  };\r\n\r\n  shouldCaptureGestures() {\r\n    if (this.props.captureGestures === true) return true\r\n    if (this.props.captureGestures === 'closed' && this._open === false) return true\r\n    if (this.props.captureGestures === 'open' && this._open === true) return true\r\n    return false\r\n  }\r\n\r\n  testPanResponderMask = (e, gestureState) => {\r\n    if (this.props.disabled) return false\r\n\r\n    // Disable if parent or child drawer exist and are open\r\n    // @TODO make cleaner, generalize to work with 3+ drawers, prop to disable/configure\r\n    if (this.context.drawer && this.context.drawer._open) return false\r\n    if (this._childDrawer && this._childDrawer._open) return false\r\n\r\n    let pos0 = this.isLeftOrRightSide() ? e.nativeEvent.pageX : e.nativeEvent.pageY\r\n    let deltaOpen = this.isLeftOrTopSide() ? this.getDeviceLength() - pos0 : pos0\r\n    let deltaClose = this.isLeftOrTopSide() ? pos0 : this.getDeviceLength() - pos0\r\n\r\n    if ( this._open && deltaOpen > this.getOpenMask() ) return false\r\n    if ( !this._open && deltaClose > this.getClosedMask() ) return false\r\n    return true\r\n  };\r\n\r\n  terminateActiveTween = () => {\r\n    if (this._activeTween) {\r\n      this._activeTween.terminate()\r\n      this._activeTween = null\r\n    }\r\n  };\r\n\r\n  open = (type, cb) => {\r\n    let start = this._length\r\n    let end = this.getOpenLength()\r\n\r\n    if (this._activeTween) return\r\n    if (type !== 'force' && start - end === 0 && this._open === true) return // do nothing if the delta is 0\r\n\r\n    this.props.onOpenStart && this.props.onOpenStart()\r\n    this.setInteractionHandle()\r\n    this._activeTween = tween({\r\n      start: this._length,\r\n      end: this.getOpenLength(),\r\n      duration: this.props.tweenDuration,\r\n      easingType: this.props.tweenEasing,\r\n      onFrame: (tweenValue) => {\r\n\tthis._length = Math.round(tweenValue*2)/2;\r\n        this.updatePosition()\r\n      },\r\n      onEnd: () => {\r\n        this._activeTween = null\r\n        this._open = true\r\n        this._prevLength = this._length\r\n        this.adjustForCaptureGestures()\r\n        this.props.onOpen()\r\n        this.clearInteractionHandle()\r\n\r\n        if(typeof type === 'function') {\r\n          type() // this is actually a callback\r\n        } else cb && cb()\r\n\r\n      }\r\n    })\r\n  };\r\n\r\n  close = (type, cb) => {\r\n    let start = this._length\r\n    let end = this.getClosedLength()\r\n\r\n    if (this._activeTween) return\r\n    if (type !== 'force' && start - end === 0 && this._open === false) return // do nothing if the delta is 0\r\n\r\n    this.props.onCloseStart && this.props.onCloseStart()\r\n    this.setInteractionHandle()\r\n    this._activeTween = tween({\r\n      start,\r\n      end,\r\n      easingType: this.props.tweenEasing,\r\n      duration: this.props.tweenDuration,\r\n      onFrame: (tweenValue) => {\r\n\tthis._length = Math.round(tweenValue*2)/2;\r\n        this.updatePosition()\r\n      },\r\n      onEnd: () => {\r\n        this._activeTween = null\r\n        this._open = false\r\n        this._prevLength = this._length\r\n        this.adjustForCaptureGestures()\r\n        this.props.onClose()\r\n        this.clearInteractionHandle()\r\n\r\n        if(typeof type === 'function') {\r\n          type() // this is actually a callback\r\n        } else cb && cb()\r\n\r\n      }\r\n    })\r\n  };\r\n\r\n  adjustForCaptureGestures() {\r\n    if (!this.props.captureGestures) return\r\n    let shouldCapture = this.shouldCaptureGestures()\r\n    if (this.mainOverlay && this.drawerOverlay) {\r\n      this.mainOverlay.setNativeProps({ pointerEvents: shouldCapture && this._open ? 'auto' : 'none' })\r\n      this.drawerOverlay.setNativeProps({ pointerEvents: shouldCapture && !this._open ? 'auto' : 'none' })\r\n    }\r\n  }\r\n\r\n  setInteractionHandle() {\r\n    if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle)\r\n    if (this.props.useInteractionManager) this._interactionHandle = InteractionManager.createInteractionHandle()\r\n  }\r\n\r\n  clearInteractionHandle() {\r\n    if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle)\r\n  }\r\n\r\n  toggle = () => {\r\n    this._open ? this.close() : this.open()\r\n  };\r\n\r\n  handleSetViewport = (e) => {\r\n    let viewport = e.nativeEvent.layout\r\n    let oldViewport = this.state.viewport\r\n    if (viewport.width === oldViewport.width && viewport.height === oldViewport.height) return\r\n    let didRotationChange = viewport.width !== oldViewport.width\r\n    this.resync(viewport, null, didRotationChange)\r\n  };\r\n\r\n  resync = (viewport, props, didRotationChange) => {\r\n    if (didRotationChange) this._syncAfterUpdate = true\r\n    viewport = viewport || this.state.viewport\r\n    props = props || this.props\r\n    this._offsetClosed = this.getClosedOffset(props, viewport)\r\n    this._offsetOpen = this.getOpenOffset(props, viewport)\r\n    this.setState({ viewport })\r\n  };\r\n\r\n  requiresResync = (nextProps) => {\r\n    for (let i = 0; i < propsWhomRequireUpdate.length; i++) {\r\n      let key = propsWhomRequireUpdate[i]\r\n      if (this.props[key] !== nextProps[key]) return true\r\n    }\r\n  };\r\n\r\n  /*** DYNAMIC GETTERS ***/\r\n  getDeviceLength = (viewport = this.state.viewport) => this.isLeftOrRightSide() ? viewport.width : viewport.height;\r\n  getOpenLength = () => this.getDeviceLength() - this._offsetOpen;\r\n  getClosedLength = () => this._offsetClosed;\r\n  getMainWidth = (viewport = this.state.viewport) => {\r\n    return this.isLeftOrRightSide() ? viewport.width - this._offsetClosed : viewport.width;\r\n  };\r\n  getMainHeight = (viewport = this.state.viewport) => {\r\n    return this.isTopOrBottomSide() ? viewport.height - this._offsetClosed : viewport.height;\r\n  };\r\n  getDrawerWidth = (viewport = this.state.viewport) => {\r\n    return this.isLeftOrRightSide() ? viewport.width - this._offsetOpen : viewport.width;\r\n  };\r\n  getDrawerHeight = (viewport = this.state.viewport) => {\r\n    return this.isTopOrBottomSide() ? viewport.height - this._offsetOpen : viewport.height;\r\n  };\r\n  getOpenMask = (viewport = this.state.viewport) => {\r\n    if (this.props.panCloseMask && this.props.panCloseMask % 1 === 0) return this.props.panCloseMask\r\n    if (this.props.panCloseMask) return this.getDeviceLength(viewport) * this.props.panCloseMask\r\n    return Math.max(0.05, this._offsetOpen)\r\n  };\r\n  getClosedMask = () => {\r\n    if (this.props.panOpenMask && this.props.panOpenMask % 1 === 0) return this.props.panOpenMask\r\n    if (this.props.panOpenMask) return this.getDeviceLength() * this.props.panOpenMask\r\n    return Math.max(0.05, this._offsetClosed)\r\n  };\r\n  getOpenOffset = (props, viewport) => {\r\n    if (typeof props.openDrawerOffset === 'function') return props.openDrawerOffset(viewport)\r\n    return props.openDrawerOffset > 1 || props.openDrawerOffset < 0 ? props.openDrawerOffset : props.openDrawerOffset * this.getDeviceLength(viewport)\r\n  };\r\n  getClosedOffset = (props, viewport) => {\r\n    if (typeof props.closedDrawerOffset === 'function') return props.closedDrawerOffset(viewport)\r\n    return props.closedDrawerOffset > 1 || props.closedDrawerOffset < 0 ? props.closedDrawerOffset : props.closedDrawerOffset * this.getDeviceLength(viewport)\r\n  };\r\n  getGestureDelta = (gestureState) => this.isLeftOrRightSide() ? gestureState.dx : gestureState.dy;\r\n  getGestureDeltaOppositeAxis = (gestureState) => this.isLeftOrRightSide() ? gestureState.dy : gestureState.dx;\r\n  /*** END DYNAMIC GETTERS ***/\r\n\r\n  isLeftOrRightSide = () => {\r\n    if (I18nManager.isRTL) {\r\n      return [\"right\", \"left\"].includes(this.props.side)\r\n    } else {\r\n      return [\"left\", \"right\"].includes(this.props.side)\r\n    }\r\n  }\r\n  isTopOrBottomSide = () => [\"top\", \"bottom\"].includes(this.props.side);\r\n  isLeftOrTopSide = () => {\r\n    let side = \"left\";\r\n    if (I18nManager.isRTL) {\r\n      side = \"right\";\r\n    }\r\n    return [side, \"top\"].includes(this.props.side);\r\n  }\r\n  isRightOrBottomSide = () => {\r\n    let side = \"right\"\r\n    if (I18nManager.isRTL) {\r\n      side = \"left\"\r\n    }\r\n    return [side, \"bottom\"].includes(this.props.side);\r\n  }\r\n\r\n  render() {\r\n    let first = this.props.type === 'overlay' ? this.renderMain() : this.renderDrawer()\r\n    let second = this.props.type === 'overlay' ? this.renderDrawer() : this.renderMain()\r\n\r\n    return (\r\n      <View\r\n        key=\"drawerContainer\"\r\n        onLayout={this.handleSetViewport}\r\n        style={this.stylesheet.container}\r\n        >\r\n        {first}\r\n        {second}\r\n      </View>\r\n    )\r\n  }\r\n\r\n  renderMain() {\r\n    return (\r\n      <View\r\n        {...this.responder.panHandlers}\r\n        key=\"main\"\r\n        ref={c => this.main = c}\r\n        style={[this.stylesheet.main, {height: this.getMainHeight(), width: this.getMainWidth()}]}\r\n        >\r\n        {this.props.children}\r\n        <View\r\n          pointerEvents={ this._open && this.shouldCaptureGestures() ? 'auto' : 'none' }\r\n          ref={c => this.mainOverlay = c}\r\n          style={[styles.overlay, this.props.styles && this.props.styles.mainOverlay]}\r\n          />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  renderDrawer() {\r\n    return (\r\n      <View\r\n        {...this.responder.panHandlers}\r\n        key=\"drawer\"\r\n        ref={c => this.drawer = c}\r\n        elevation={this.props.elevation}\r\n        style={[this.stylesheet.drawer, {height: this.getDrawerHeight(), width: this.getDrawerWidth()}]}\r\n        >\r\n        {this.props.content}\r\n        <View\r\n          pointerEvents={ !this._open && this.shouldCaptureGestures() ? 'auto' : 'none' }\r\n          ref={c => this.drawerOverlay = c}\r\n          style={[styles.overlay, this.props.styles && this.props.styles.drawerOverlay]}\r\n          />\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    right: 0,\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    backgroundColor: 'transparent'\r\n  }\r\n})\r\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;;AAGA,OAAOC,KAAP;AAEA,IAAIC,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAnB;AACA,IAAMC,mBAAmB,GAAG,GAA5B;AACA,IAAMC,YAAY,GAAG,GAArB;AACA,IAAMC,sBAAsB,GAAG,CAAC,oBAAD,EAAuB,kBAAvB,EAA2C,MAA3C,EAAmD,QAAnD,CAA/B;;IAEqBC,M;;;;;;;;;;;;;;;UAEnBC,O,GAAU,C;UACVC,W,GAAc,C;UACdC,W,GAAc,C;UACdC,a,GAAgB,C;UAChBC,K,GAAQ,K;UACRC,Q,GAAW,K;UACXC,a,GAAgB,K;UAChBC,Y,GAAe,I;UACfC,U,GAAa,C;UACbC,a,GAAgB,C;UAChBC,gB,GAAmB,K;UACnBC,kB,GAAqB,I;UASrBC,K,GAAQ;MACNC,QAAQ,EAAEpB;IADJ,C;;UA6ERqB,e,GAAkB;MAAA,OAAO;QAAEC,MAAM;MAAR,CAAP;IAAA,C;;UAiClBC,U,GAAa,UAACC,KAAD,EAAW;MACtB,IAAIC,UAAU,GAAG,MAAKC,eAAL,EAAjB;;MACA,MAAKhB,aAAL,GAAqB,MAAKiB,eAAL,CAAqBH,KAArB,EAA4B,MAAKL,KAAL,CAAWC,QAAvC,CAArB;MACA,MAAKX,WAAL,GAAmB,MAAKmB,aAAL,CAAmBJ,KAAnB,EAA0B,MAAKL,KAAL,CAAWC,QAArC,CAAnB;MAEA,MAAKZ,WAAL,GAAmB,MAAKD,OAAxB;MAEA,IAAIsB,MAAM,GAAG;QACXC,SAAS,EAAE;UACTC,IAAI,EAAE,CADG;UAETC,cAAc,EAAE,QAFP;UAGTC,UAAU,EAAE;QAHH;MADA,CAAb;MAQAJ,MAAM,CAACK,IAAP,GAAc,SAAc;QAC1BC,QAAQ,EAAE,UADgB;QAE1BC,WAAW,EAAE;MAFa,CAAd,EAGX,MAAKC,iBAAL,KAA2B;QAACC,GAAG,EAAE;MAAN,CAA3B,GAAsC;QAACC,IAAI,EAAE;MAAP,CAH3B,EAGsC,MAAKf,KAAL,CAAWK,MAAX,CAAkBK,IAHxD,CAAd;MAKAL,MAAM,CAACP,MAAP,GAAgB,SAAc;QAC5Ba,QAAQ,EAAE,UADkB;QAE5BC,WAAW,EAAC;MAFgB,CAAd,EAGb,MAAKC,iBAAL,KAA2B;QAACC,GAAG,EAAE;MAAN,CAA3B,GAAsC;QAACC,IAAI,EAAE;MAAP,CAHzB,EAGoC,MAAKf,KAAL,CAAWK,MAAX,CAAkBP,MAHtD,CAAhB;;MAKA,IAAIE,KAAK,CAACgB,cAAN,IAAwBhB,KAAK,CAACiB,IAAlC,EAAwC;QACtC,MAAK9B,KAAL,GAAa,IAAb;QACA,MAAKJ,OAAL,GAAekB,UAAU,GAAG,MAAKhB,WAAjC;QACAoB,MAAM,CAACK,IAAP,CAAY,MAAKV,KAAL,CAAWkB,IAAvB,IAA+B,CAA/B;QACAb,MAAM,CAACP,MAAP,CAAc,MAAKE,KAAL,CAAWkB,IAAzB,IAAiC,CAAjC;QACA,IAAIlB,KAAK,CAACmB,IAAN,KAAe,QAAnB,EAA6Bd,MAAM,CAACK,IAAP,CAAY,MAAKV,KAAL,CAAWkB,IAAvB,IAA+BjB,UAAU,GAAG,MAAKhB,WAAjD;QAC7B,IAAIe,KAAK,CAACmB,IAAN,KAAe,UAAnB,EAA+Bd,MAAM,CAACK,IAAP,CAAY,MAAKV,KAAL,CAAWkB,IAAvB,IAA+BjB,UAAU,GAAG,MAAKhB,WAAjD;MAChC,CAPD,MAOO;QACL,MAAKE,KAAL,GAAa,KAAb;QACA,MAAKJ,OAAL,GAAe,MAAKG,aAApB;QACAmB,MAAM,CAACK,IAAP,CAAY,MAAKV,KAAL,CAAWkB,IAAvB,IAA+B,MAAKhC,aAApC;QACA,IAAIc,KAAK,CAACmB,IAAN,KAAe,QAAnB,EAA6Bd,MAAM,CAACP,MAAP,CAAc,MAAKE,KAAL,CAAWkB,IAAzB,IAAiC,CAAjC;QAC7B,IAAIlB,KAAK,CAACmB,IAAN,KAAe,SAAnB,EAA8Bd,MAAM,CAACP,MAAP,CAAc,MAAKE,KAAL,CAAWkB,IAAzB,IAAiC,MAAKhC,aAAL,GAAqB,MAAKD,WAA1B,GAAwCgB,UAAzE;QAC9B,IAAID,KAAK,CAACmB,IAAN,KAAe,UAAnB,EAA+Bd,MAAM,CAACP,MAAP,CAAc,MAAKE,KAAL,CAAWkB,IAAzB,IAAiC,CAAEjB,UAAF,GAAe,MAAKf,aAApB,GAAoC,MAAKD,WAA1E;MAChC;;MAED,IAAI,MAAKyB,IAAT,EAAe;QACb,MAAKZ,MAAL,CAAYsB,cAAZ,CAA2B;UAAEC,KAAK,EAAE;YAACN,IAAI,EAAEV,MAAM,CAACP,MAAP,CAAciB;UAArB;QAAT,CAA3B;;QACA,MAAKL,IAAL,CAAUU,cAAV,CAAyB;UAAEC,KAAK,EAAE;YAACN,IAAI,EAAEV,MAAM,CAACK,IAAP,CAAYK;UAAnB;QAAT,CAAzB;MACD,CAHD,MAGO;QACL,MAAKO,UAAL,GAAkBC,UAAU,CAACC,MAAX,CAAkBnB,MAAlB,CAAlB;QACA,MAAKoB,SAAL,GAAiBC,YAAY,CAACF,MAAb,CAAoB;UACnCG,4BAA4B,EAAE,MAAKA,4BADA;UAEnCC,mCAAmC,EAAE,MAAKA,mCAFP;UAGnCC,2BAA2B,EAAE,MAAKA,2BAHC;UAInCC,kCAAkC,EAAE,MAAKA,kCAJN;UAKnCC,kBAAkB,EAAE,MAAKA,kBALU;UAMnCC,qBAAqB,EAAE,MAAKA,qBANO;UAO1CC,uBAAuB,EAAE,MAAKA;QAPY,CAApB,CAAjB;MASD;;MAED,MAAKC,MAAL,CAAY,IAAZ,EAAkBlC,KAAlB;IACD,C;;UAEDmC,c,GAAiB,YAAM;MACrB,IAAIC,SAAS,GAAG,EAAhB;MACA,IAAIC,WAAW,GAAG,EAAlB;;MACA,IAAIC,KAAK,GAAG,CAAC,MAAKvD,OAAL,GAAe,MAAKG,aAArB,KAAuC,MAAKqD,aAAL,KAAuB,MAAKrD,aAAnE,CAAZ;;MAEA,QAAQ,MAAKc,KAAL,CAAWmB,IAAnB;QACE,KAAK,SAAL;UACEkB,WAAW,CAAC,MAAKrC,KAAL,CAAWkB,IAAZ,CAAX,GAA+B,CAAC,MAAKhB,eAAL,EAAD,GAA0B,MAAKjB,WAA/B,GAA6C,MAAKF,OAAjF;UACAqD,SAAS,CAAC,MAAKpC,KAAL,CAAWkB,IAAZ,CAAT,GAA6B,MAAKhC,aAAlC;UACA;;QACF,KAAK,QAAL;UACEkD,SAAS,CAAC,MAAKpC,KAAL,CAAWkB,IAAZ,CAAT,GAA6B,MAAKnC,OAAlC;UACAsD,WAAW,CAAC,MAAKrC,KAAL,CAAWkB,IAAZ,CAAX,GAA+B,CAA/B;UACA;;QACF,KAAK,UAAL;UACEkB,SAAS,CAAC,MAAKpC,KAAL,CAAWkB,IAAZ,CAAT,GAA6B,MAAKnC,OAAlC;UACAsD,WAAW,CAAC,MAAKrC,KAAL,CAAWkB,IAAZ,CAAX,GAA+B,CAAC,MAAKhB,eAAL,EAAD,GAA0B,MAAKnB,OAA/B,GAAyC,MAAKE,WAA7E;UACA;MAZJ;;MAeA,IAAIuD,gBAAgB,GAAG,IAAvB;MACA,IAAIC,kBAAkB,GAAG,IAAzB;;MACA,IAAI,MAAKzC,KAAL,CAAW0C,YAAf,EAA6B;QAC3B,IAAIC,SAAS,GAAG,MAAK3C,KAAL,CAAW0C,YAAX,CAAwBJ,KAAxB,EAA+B,MAAKtC,KAAL,CAAWkB,IAA1C,CAAhB;;QACAkB,SAAS,GAAG,SAAcA,SAAd,EAAyBO,SAAS,CAACjC,IAAnC,CAAZ;QACA2B,WAAW,GAAG,SAAcA,WAAd,EAA2BM,SAAS,CAAC7C,MAArC,CAAd;QACA0C,gBAAgB,GAAGG,SAAS,CAACC,WAA7B;QACAH,kBAAkB,GAAGE,SAAS,CAACE,aAA/B;MACD;;MACD,IAAI,MAAKnC,IAAL,IAAa,MAAKZ,MAAlB,IAA4B,MAAK8C,WAAjC,IAAgD,MAAKC,aAAzD,EAAwE;QACtE,MAAK/C,MAAL,CAAYsB,cAAZ,CAA2B;UAACC,KAAK,EAAEgB;QAAR,CAA3B;;QACA,MAAK3B,IAAL,CAAUU,cAAV,CAAyB;UAACC,KAAK,EAAEe;QAAR,CAAzB;;QACA,IAAII,gBAAJ,EAAsB,MAAKI,WAAL,CAAiBxB,cAAjB,CAAgC;UAACC,KAAK,EAAEmB;QAAR,CAAhC;QACtB,IAAIC,kBAAJ,EAAwB,MAAKI,aAAL,CAAmBzB,cAAnB,CAAkC;UAACC,KAAK,EAAEoB;QAAR,CAAlC;MACzB;IACF,C;;UAQDR,uB,GAA0B,UAACa,CAAD,EAAIC,YAAJ,EAAqB;MAC7C,MAAK3D,QAAL,GAAgB,KAAhB;MACA,MAAK4D,gBAAL,CAAsB,MAAKC,eAAL,CAAqBF,YAArB,CAAtB,IAA4D,MAAK9B,IAAL,EAA5D,GAA0E,MAAKiC,KAAL,EAA1E;IACD,C;;UAEDtB,mC,GAAsC,UAACkB,CAAD,EAAIC,YAAJ,EAAqB;MACzD,IAAI,MAAKI,qBAAL,EAAJ,EAAkC,OAAO,MAAKC,gBAAL,CAAsBN,CAAtB,EAAyBC,YAAzB,CAAP;MAClC,OAAO,KAAP;IACD,C;;UAEDpB,4B,GAA+B,UAACmB,CAAD,EAAIC,YAAJ,EAAqB;MAClD,IAAI,CAAC,MAAKI,qBAAL,EAAL,EAAmC,OAAO,MAAKC,gBAAL,CAAsBN,CAAtB,EAAyBC,YAAzB,CAAP;MACnC,OAAO,KAAP;IACD,C;;UAEDjB,kC,GAAqC,UAACgB,CAAD,EAAIC,YAAJ,EAAqB;MACxD,IAAI,MAAKI,qBAAL,MAAgC,MAAKnD,KAAL,CAAWqD,YAA/C,EAA6D,OAAO,MAAKC,oBAAL,CAA0BR,CAA1B,EAA6BC,YAA7B,CAAP;MAC7D,OAAO,KAAP;IACD,C;;UAEDlB,2B,GAA8B,UAACiB,CAAD,EAAIC,YAAJ,EAAqB;MACjD,IAAI,CAAC,MAAKI,qBAAL,EAAD,IAAiC,MAAKnD,KAAL,CAAWqD,YAAhD,EAA8D,OAAO,MAAKC,oBAAL,CAA0BR,CAA1B,EAA6BC,YAA7B,CAAP;MAC9D,OAAO,KAAP;IACD,C;;UAEDhB,kB,GAAqB,UAACe,CAAD,EAAIC,YAAJ,EAAqB;MACxC,IAAIQ,KAAK,GAAG,MAAKN,eAAL,CAAqBF,YAArB,CAAZ;;MACA,IAAI,CAAC,MAAK/C,KAAL,CAAWwD,SAAhB,EAA2B,OAAO,KAAP;MAG3B,IAAI,MAAKrE,KAAL,GAAaoE,KAAK,GAAG,CAArB,GAAyB,MAAKE,mBAAL,EAA7B,EAAyD,OAAO,KAAP;MAEzDF,KAAK,GAAG,MAAKE,mBAAL,KAA6BF,KAAK,GAAG,CAAC,CAAtC,GAA0CA,KAAlD;MACA,IAAIG,MAAM,GAAG,MAAK1E,WAAL,GAAmBuE,KAAhC;MACAG,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASF,MAAT,EAAiB,MAAKnB,aAAL,EAAjB,CAAT;MACAmB,MAAM,GAAGC,IAAI,CAACE,GAAL,CAASH,MAAT,EAAiB,MAAKI,eAAL,EAAjB,CAAT;MACAJ,MAAM,GAAGC,IAAI,CAACI,KAAL,CAAWL,MAAM,GAAC,CAAlB,IAAqB,CAA9B;MACA,MAAK3E,OAAL,GAAe2E,MAAf;;MAEA,MAAKvB,cAAL;;MACA,IAAI,CAAC,MAAK/C,QAAV,EAAoB;QAClB,MAAKY,KAAL,CAAWgE,WAAX,IAA0B,MAAKhE,KAAL,CAAWgE,WAAX,EAA1B;MACD;;MACD,MAAK5E,QAAL,GAAgB,IAAhB;IACD,C;;UAED4C,qB,GAAwB,UAACc,CAAD,EAAIC,YAAJ,EAAqB;MAC3C,IAAIQ,KAAK,GAAG,MAAKN,eAAL,CAAqBF,YAArB,CAAZ;;MACA,MAAK3D,QAAL,GAAgB,KAAhB;MACA,IAAI6E,IAAI,CAACC,GAAL,KAAa,MAAK1E,aAAlB,GAAkCZ,YAAtC,EAAoD,MAAKuF,kBAAL;MACpD,IAAIR,IAAI,CAACS,GAAL,CAASb,KAAT,IAAkB,EAAlB,IAAwB,MAAKjE,YAAjC,EAA+C;MAE/C,MAAK0D,gBAAL,CAAsBO,KAAtB,IAA+B,MAAKtC,IAAL,EAA/B,GAA6C,MAAKiC,KAAL,EAA7C;;MACA,MAAKf,cAAL;;MACA,MAAKnD,WAAL,GAAmB,MAAKD,OAAxB;IACD,C;;UAEDqE,gB,GAAmB,UAACN,CAAD,EAAIC,YAAJ,EAAqB;MACtC,IAAIsB,MAAM,GAAG,MAAKC,oBAAL,CAA0BxB,CAA1B,EAA6BC,YAA7B,CAAb;;MACA,IAAI,CAACsB,MAAL,EAAa,OAAO,KAAP;MAEb,IAAI,CAAC,MAAKlF,KAAN,IAAewE,IAAI,CAACS,GAAL,CAASrB,YAAY,CAACwB,EAAtB,KAA6BZ,IAAI,CAACS,GAAL,CAASrB,YAAY,CAACyB,EAAtB,CAAhD,EAA2E,OAAO,KAAP;MAC3E,MAAKhF,aAAL,GAAqByE,IAAI,CAACC,GAAL,EAArB;MACA,IAAIG,MAAM,IAAI,MAAKlB,qBAAL,EAAd,EAA4C,OAAO,IAAP;MAC5C,IAAI,MAAKnD,KAAL,CAAWqD,YAAf,EAA6B,OAAO,KAAP;MAC7B,IAAI,CAAC,MAAKrD,KAAL,CAAWwD,SAAhB,EAA2B,OAAO,KAAP;;MAC3B,MAAKiB,oBAAL;;MACA,OAAO,IAAP;IACD,C;;UAEDnB,oB,GAAuB,UAACR,CAAD,EAAIC,YAAJ,EAAqB;MAC1C,IAAIsB,MAAM,GAAG,MAAKC,oBAAL,CAA0BxB,CAA1B,EAA6BC,YAA7B,CAAb;;MACA,IAAI,CAACsB,MAAD,KAAY,CAAC,MAAKrE,KAAL,CAAW0E,iBAAZ,IAAiC,MAAKvF,KAAL,KAAe,KAA5D,CAAJ,EAAyE,OAAO,KAAP;MACzE,IAAI,CAAC,MAAKa,KAAL,CAAWwD,SAAhB,EAA2B,OAAO,KAAP;MAE3B,IAAI,CAAC,MAAKxD,KAAL,CAAWqD,YAAZ,IAA4B,MAAKrD,KAAL,CAAW2E,QAAvC,IAAmD,CAAC,MAAK3E,KAAL,CAAWwD,SAA/D,IAA4E,MAAKpE,QAArF,EAA+F,OAAO,KAAP;;MAC/F,IAAImE,KAAK,GAAG,MAAKN,eAAL,CAAqBF,YAArB,CAAZ;;MACA,IAAI6B,iBAAiB,GAAG,MAAKC,2BAAL,CAAiC9B,YAAjC,CAAxB;;MACA,IAAI+B,gBAAgB,GAAIvB,KAAK,GAAG,CAAT,GAAc,IAAd,GAAqB,KAA5C;MACA,IAAIwB,oBAAoB,GAAIxB,KAAK,GAAG,CAAT,GAAc,IAAd,GAAqB,KAAhD;MACA,IAAIyB,iBAAiB,GAAIrB,IAAI,CAACS,GAAL,CAASQ,iBAAT,KAA+BjB,IAAI,CAACS,GAAL,CAASb,KAAT,CAAhC,GAAmD,IAAnD,GAA0D,KAAlF;MACA,IAAI0B,qBAAqB,GAAI,MAAKC,eAAL,EAAD,GAA2BJ,gBAA3B,GAA8CC,oBAA1E;;MACA,IAAIC,iBAAiB,IAAK,MAAK7F,KAAL,IAAc,CAAC8F,qBAArC,IAAgE,CAAC,MAAK9F,KAAN,IAAe8F,qBAAnF,EAA2G;QACzG,OAAO,KAAP;MACD;;MAED,MAAKR,oBAAL;;MACA,OAAO,IAAP;IACD,C;;UAEDN,kB,GAAqB,YAAM;MACzB,IAAI,MAAK7E,YAAT,EAAuB,OAAO,KAAP;;MACvB,IAAI,MAAKU,KAAL,CAAWmF,SAAX,IAAyB,MAAKnF,KAAL,CAAWoF,UAAX,IAAyB,MAAKjG,KAA3D,EAAmE;QACjE,MAAKA,KAAL,GAAa,MAAK+D,KAAL,EAAb,GAA4B,MAAKjC,IAAL,EAA5B;QACA,OAAO,IAAP;MACD;;MACD,IAAI,MAAKjB,KAAL,CAAWqF,eAAf,EAAgC;QAC9B,IAAInB,GAAG,GAAG,IAAID,IAAJ,GAAWqB,OAAX,EAAV;QACA,IAAIC,SAAS,GAAGrB,GAAG,GAAG,MAAK3E,UAA3B;QACA,MAAKA,UAAL,GAAkB2E,GAAlB;;QACA,IAAIqB,SAAS,GAAG5G,mBAAhB,EAAqC;UACnC,MAAKQ,KAAL,GAAa,MAAK+D,KAAL,EAAb,GAA4B,MAAKjC,IAAL,EAA5B;UACA,OAAO,IAAP;QACD;MACF;;MACD,OAAO,KAAP;IACD,C;;UASDqD,oB,GAAuB,UAACxB,CAAD,EAAIC,YAAJ,EAAqB;MAC1C,IAAI,MAAK/C,KAAL,CAAW2E,QAAf,EAAyB,OAAO,KAAP;MAIzB,IAAI,MAAKa,OAAL,CAAa1F,MAAb,IAAuB,MAAK0F,OAAL,CAAa1F,MAAb,CAAoBX,KAA/C,EAAsD,OAAO,KAAP;MACtD,IAAI,MAAKsG,YAAL,IAAqB,MAAKA,YAAL,CAAkBtG,KAA3C,EAAkD,OAAO,KAAP;MAElD,IAAIuG,IAAI,GAAG,MAAK7E,iBAAL,KAA2BiC,CAAC,CAAC6C,WAAF,CAAcC,KAAzC,GAAiD9C,CAAC,CAAC6C,WAAF,CAAcE,KAA1E;MACA,IAAIC,SAAS,GAAG,MAAKZ,eAAL,KAAyB,MAAKhF,eAAL,KAAyBwF,IAAlD,GAAyDA,IAAzE;MACA,IAAIK,UAAU,GAAG,MAAKb,eAAL,KAAyBQ,IAAzB,GAAgC,MAAKxF,eAAL,KAAyBwF,IAA1E;MAEA,IAAK,MAAKvG,KAAL,IAAc2G,SAAS,GAAG,MAAKE,WAAL,EAA/B,EAAoD,OAAO,KAAP;MACpD,IAAK,CAAC,MAAK7G,KAAN,IAAe4G,UAAU,GAAG,MAAKE,aAAL,EAAjC,EAAwD,OAAO,KAAP;MACxD,OAAO,IAAP;IACD,C;;UAEDxB,oB,GAAuB,YAAM;MAC3B,IAAI,MAAKnF,YAAT,EAAuB;QACrB,MAAKA,YAAL,CAAkB4G,SAAlB;;QACA,MAAK5G,YAAL,GAAoB,IAApB;MACD;IACF,C;;UAED2B,I,GAAO,UAACE,IAAD,EAAOgF,EAAP,EAAc;MACnB,IAAIC,KAAK,GAAG,MAAKrH,OAAjB;;MACA,IAAIsH,GAAG,GAAG,MAAK9D,aAAL,EAAV;;MAEA,IAAI,MAAKjD,YAAT,EAAuB;MACvB,IAAI6B,IAAI,KAAK,OAAT,IAAoBiF,KAAK,GAAGC,GAAR,KAAgB,CAApC,IAAyC,MAAKlH,KAAL,KAAe,IAA5D,EAAkE;MAElE,MAAKa,KAAL,CAAWsG,WAAX,IAA0B,MAAKtG,KAAL,CAAWsG,WAAX,EAA1B;;MACA,MAAKC,oBAAL;;MACA,MAAKjH,YAAL,GAAoBf,KAAK,CAAC;QACxB6H,KAAK,EAAE,MAAKrH,OADY;QAExBsH,GAAG,EAAE,MAAK9D,aAAL,EAFmB;QAGxBiE,QAAQ,EAAE,MAAKxG,KAAL,CAAWyG,aAHG;QAIxBC,UAAU,EAAE,MAAK1G,KAAL,CAAW2G,WAJC;QAKxBC,OAAO,EAAE,iBAACC,UAAD,EAAgB;UAC9B,MAAK9H,OAAL,GAAe4E,IAAI,CAACI,KAAL,CAAW8C,UAAU,GAAC,CAAtB,IAAyB,CAAxC;;UACO,MAAK1E,cAAL;QACD,CARuB;QASxB2E,KAAK,EAAE,iBAAM;UACX,MAAKxH,YAAL,GAAoB,IAApB;UACA,MAAKH,KAAL,GAAa,IAAb;UACA,MAAKH,WAAL,GAAmB,MAAKD,OAAxB;;UACA,MAAKgI,wBAAL;;UACA,MAAK/G,KAAL,CAAWgH,MAAX;;UACA,MAAKC,sBAAL;;UAEA,IAAG,OAAO9F,IAAP,KAAgB,UAAnB,EAA+B;YAC7BA,IAAI;UACL,CAFD,MAEOgF,EAAE,IAAIA,EAAE,EAAR;QAER;MArBuB,CAAD,CAAzB;IAuBD,C;;UAEDjD,K,GAAQ,UAAC/B,IAAD,EAAOgF,EAAP,EAAc;MACpB,IAAIC,KAAK,GAAG,MAAKrH,OAAjB;;MACA,IAAIsH,GAAG,GAAG,MAAKvC,eAAL,EAAV;;MAEA,IAAI,MAAKxE,YAAT,EAAuB;MACvB,IAAI6B,IAAI,KAAK,OAAT,IAAoBiF,KAAK,GAAGC,GAAR,KAAgB,CAApC,IAAyC,MAAKlH,KAAL,KAAe,KAA5D,EAAmE;MAEnE,MAAKa,KAAL,CAAWkH,YAAX,IAA2B,MAAKlH,KAAL,CAAWkH,YAAX,EAA3B;;MACA,MAAKX,oBAAL;;MACA,MAAKjH,YAAL,GAAoBf,KAAK,CAAC;QACxB6H,KAAK,EAALA,KADwB;QAExBC,GAAG,EAAHA,GAFwB;QAGxBK,UAAU,EAAE,MAAK1G,KAAL,CAAW2G,WAHC;QAIxBH,QAAQ,EAAE,MAAKxG,KAAL,CAAWyG,aAJG;QAKxBG,OAAO,EAAE,iBAACC,UAAD,EAAgB;UAC9B,MAAK9H,OAAL,GAAe4E,IAAI,CAACI,KAAL,CAAW8C,UAAU,GAAC,CAAtB,IAAyB,CAAxC;;UACO,MAAK1E,cAAL;QACD,CARuB;QASxB2E,KAAK,EAAE,iBAAM;UACX,MAAKxH,YAAL,GAAoB,IAApB;UACA,MAAKH,KAAL,GAAa,KAAb;UACA,MAAKH,WAAL,GAAmB,MAAKD,OAAxB;;UACA,MAAKgI,wBAAL;;UACA,MAAK/G,KAAL,CAAWmH,OAAX;;UACA,MAAKF,sBAAL;;UAEA,IAAG,OAAO9F,IAAP,KAAgB,UAAnB,EAA+B;YAC7BA,IAAI;UACL,CAFD,MAEOgF,EAAE,IAAIA,EAAE,EAAR;QAER;MArBuB,CAAD,CAAzB;IAuBD,C;;UAoBDiB,M,GAAS,YAAM;MACb,MAAKjI,KAAL,GAAa,MAAK+D,KAAL,EAAb,GAA4B,MAAKjC,IAAL,EAA5B;IACD,C;;UAEDoG,iB,GAAoB,UAACvE,CAAD,EAAO;MACzB,IAAIlD,QAAQ,GAAGkD,CAAC,CAAC6C,WAAF,CAAc2B,MAA7B;MACA,IAAIC,WAAW,GAAG,MAAK5H,KAAL,CAAWC,QAA7B;MACA,IAAIA,QAAQ,CAAC4H,KAAT,KAAmBD,WAAW,CAACC,KAA/B,IAAwC5H,QAAQ,CAAC6H,MAAT,KAAoBF,WAAW,CAACE,MAA5E,EAAoF;MACpF,IAAIC,iBAAiB,GAAG9H,QAAQ,CAAC4H,KAAT,KAAmBD,WAAW,CAACC,KAAvD;;MACA,MAAKtF,MAAL,CAAYtC,QAAZ,EAAsB,IAAtB,EAA4B8H,iBAA5B;IACD,C;;UAEDxF,M,GAAS,UAACtC,QAAD,EAAWI,KAAX,EAAkB0H,iBAAlB,EAAwC;MAC/C,IAAIA,iBAAJ,EAAuB,MAAKjI,gBAAL,GAAwB,IAAxB;MACvBG,QAAQ,GAAGA,QAAQ,IAAI,MAAKD,KAAL,CAAWC,QAAlC;MACAI,KAAK,GAAGA,KAAK,IAAI,MAAKA,KAAtB;MACA,MAAKd,aAAL,GAAqB,MAAKiB,eAAL,CAAqBH,KAArB,EAA4BJ,QAA5B,CAArB;MACA,MAAKX,WAAL,GAAmB,MAAKmB,aAAL,CAAmBJ,KAAnB,EAA0BJ,QAA1B,CAAnB;;MACA,MAAK+H,QAAL,CAAc;QAAE/H,QAAQ,EAARA;MAAF,CAAd;IACD,C;;UAEDgI,c,GAAiB,UAACC,SAAD,EAAe;MAC9B,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjJ,sBAAsB,CAAC6E,MAA3C,EAAmDoE,CAAC,EAApD,EAAwD;QACtD,IAAIC,GAAG,GAAGlJ,sBAAsB,CAACiJ,CAAD,CAAhC;QACA,IAAI,MAAK9H,KAAL,CAAW+H,GAAX,MAAoBF,SAAS,CAACE,GAAD,CAAjC,EAAwC,OAAO,IAAP;MACzC;IACF,C;;UAGD7H,e,GAAkB;MAAA,IAACN,QAAD,uEAAY,MAAKD,KAAL,CAAWC,QAAvB;MAAA,OAAoC,MAAKiB,iBAAL,KAA2BjB,QAAQ,CAAC4H,KAApC,GAA4C5H,QAAQ,CAAC6H,MAAzF;IAAA,C;;UAClBlF,a,GAAgB;MAAA,OAAM,MAAKrC,eAAL,KAAyB,MAAKjB,WAApC;IAAA,C;;UAChB6E,e,GAAkB;MAAA,OAAM,MAAK5E,aAAX;IAAA,C;;UAClB8I,Y,GAAe,YAAoC;MAAA,IAAnCpI,QAAmC,uEAAxB,MAAKD,KAAL,CAAWC,QAAa;MACjD,OAAO,MAAKiB,iBAAL,KAA2BjB,QAAQ,CAAC4H,KAAT,GAAiB,MAAKtI,aAAjD,GAAiEU,QAAQ,CAAC4H,KAAjF;IACD,C;;UACDS,a,GAAgB,YAAoC;MAAA,IAAnCrI,QAAmC,uEAAxB,MAAKD,KAAL,CAAWC,QAAa;MAClD,OAAO,MAAKsI,iBAAL,KAA2BtI,QAAQ,CAAC6H,MAAT,GAAkB,MAAKvI,aAAlD,GAAkEU,QAAQ,CAAC6H,MAAlF;IACD,C;;UACDU,c,GAAiB,YAAoC;MAAA,IAAnCvI,QAAmC,uEAAxB,MAAKD,KAAL,CAAWC,QAAa;MACnD,OAAO,MAAKiB,iBAAL,KAA2BjB,QAAQ,CAAC4H,KAAT,GAAiB,MAAKvI,WAAjD,GAA+DW,QAAQ,CAAC4H,KAA/E;IACD,C;;UACDY,e,GAAkB,YAAoC;MAAA,IAAnCxI,QAAmC,uEAAxB,MAAKD,KAAL,CAAWC,QAAa;MACpD,OAAO,MAAKsI,iBAAL,KAA2BtI,QAAQ,CAAC6H,MAAT,GAAkB,MAAKxI,WAAlD,GAAgEW,QAAQ,CAAC6H,MAAhF;IACD,C;;UACDzB,W,GAAc,YAAoC;MAAA,IAAnCpG,QAAmC,uEAAxB,MAAKD,KAAL,CAAWC,QAAa;MAChD,IAAI,MAAKI,KAAL,CAAWqI,YAAX,IAA2B,MAAKrI,KAAL,CAAWqI,YAAX,GAA0B,CAA1B,KAAgC,CAA/D,EAAkE,OAAO,MAAKrI,KAAL,CAAWqI,YAAlB;MAClE,IAAI,MAAKrI,KAAL,CAAWqI,YAAf,EAA6B,OAAO,MAAKnI,eAAL,CAAqBN,QAArB,IAAiC,MAAKI,KAAL,CAAWqI,YAAnD;MAC7B,OAAO1E,IAAI,CAACE,GAAL,CAAS,IAAT,EAAe,MAAK5E,WAApB,CAAP;IACD,C;;UACDgH,a,GAAgB,YAAM;MACpB,IAAI,MAAKjG,KAAL,CAAWsI,WAAX,IAA0B,MAAKtI,KAAL,CAAWsI,WAAX,GAAyB,CAAzB,KAA+B,CAA7D,EAAgE,OAAO,MAAKtI,KAAL,CAAWsI,WAAlB;MAChE,IAAI,MAAKtI,KAAL,CAAWsI,WAAf,EAA4B,OAAO,MAAKpI,eAAL,KAAyB,MAAKF,KAAL,CAAWsI,WAA3C;MAC5B,OAAO3E,IAAI,CAACE,GAAL,CAAS,IAAT,EAAe,MAAK3E,aAApB,CAAP;IACD,C;;UACDkB,a,GAAgB,UAACJ,KAAD,EAAQJ,QAAR,EAAqB;MACnC,IAAI,OAAOI,KAAK,CAACuI,gBAAb,KAAkC,UAAtC,EAAkD,OAAOvI,KAAK,CAACuI,gBAAN,CAAuB3I,QAAvB,CAAP;MAClD,OAAOI,KAAK,CAACuI,gBAAN,GAAyB,CAAzB,IAA8BvI,KAAK,CAACuI,gBAAN,GAAyB,CAAvD,GAA2DvI,KAAK,CAACuI,gBAAjE,GAAoFvI,KAAK,CAACuI,gBAAN,GAAyB,MAAKrI,eAAL,CAAqBN,QAArB,CAApH;IACD,C;;UACDO,e,GAAkB,UAACH,KAAD,EAAQJ,QAAR,EAAqB;MACrC,IAAI,OAAOI,KAAK,CAACwI,kBAAb,KAAoC,UAAxC,EAAoD,OAAOxI,KAAK,CAACwI,kBAAN,CAAyB5I,QAAzB,CAAP;MACpD,OAAOI,KAAK,CAACwI,kBAAN,GAA2B,CAA3B,IAAgCxI,KAAK,CAACwI,kBAAN,GAA2B,CAA3D,GAA+DxI,KAAK,CAACwI,kBAArE,GAA0FxI,KAAK,CAACwI,kBAAN,GAA2B,MAAKtI,eAAL,CAAqBN,QAArB,CAA5H;IACD,C;;UACDqD,e,GAAkB,UAACF,YAAD;MAAA,OAAkB,MAAKlC,iBAAL,KAA2BkC,YAAY,CAACyB,EAAxC,GAA6CzB,YAAY,CAACwB,EAA5E;IAAA,C;;UAClBM,2B,GAA8B,UAAC9B,YAAD;MAAA,OAAkB,MAAKlC,iBAAL,KAA2BkC,YAAY,CAACwB,EAAxC,GAA6CxB,YAAY,CAACyB,EAA5E;IAAA,C;;UAG9B3D,iB,GAAoB,YAAM;MACxB,IAAI4H,WAAW,CAACC,KAAhB,EAAuB;QACrB,OAAO,CAAC,OAAD,EAAU,MAAV,EAAkBC,QAAlB,CAA2B,MAAK3I,KAAL,CAAWkB,IAAtC,CAAP;MACD,CAFD,MAEO;QACL,OAAO,CAAC,MAAD,EAAS,OAAT,EAAkByH,QAAlB,CAA2B,MAAK3I,KAAL,CAAWkB,IAAtC,CAAP;MACD;IACF,C;;UACDgH,iB,GAAoB;MAAA,OAAM,CAAC,KAAD,EAAQ,QAAR,EAAkBS,QAAlB,CAA2B,MAAK3I,KAAL,CAAWkB,IAAtC,CAAN;IAAA,C;;UACpBgE,e,GAAkB,YAAM;MACtB,IAAIhE,IAAI,GAAG,MAAX;;MACA,IAAIuH,WAAW,CAACC,KAAhB,EAAuB;QACrBxH,IAAI,GAAG,OAAP;MACD;;MACD,OAAO,CAACA,IAAD,EAAO,KAAP,EAAcyH,QAAd,CAAuB,MAAK3I,KAAL,CAAWkB,IAAlC,CAAP;IACD,C;;UACDuC,mB,GAAsB,YAAM;MAC1B,IAAIvC,IAAI,GAAG,OAAX;;MACA,IAAIuH,WAAW,CAACC,KAAhB,EAAuB;QACrBxH,IAAI,GAAG,MAAP;MACD;;MACD,OAAO,CAACA,IAAD,EAAO,QAAP,EAAiByH,QAAjB,CAA0B,MAAK3I,KAAL,CAAWkB,IAArC,CAAP;IACD,C;;;;;;;yCA7boBpB,M,EAAQ;MAG3B,KAAK2F,YAAL,GAAoB3F,MAApB;IACD;;;yCAEoB;MACnB,IAAI,KAAK0F,OAAL,CAAa1F,MAAjB,EAAyB,KAAK0F,OAAL,CAAa1F,MAAb,CAAoB8I,oBAApB,CAAyC,IAAzC;MACzB,IAAI,KAAK5I,KAAL,CAAW6I,mBAAX,IAAkCC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA/D,EAA6EC,OAAO,CAACC,KAAR,CAAc,iFAAd;MAC7E,IAAI,KAAKlJ,KAAL,CAAWmJ,oBAAX,IAAmCL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAhE,EAA8EC,OAAO,CAACC,KAAR,CAAc,0DAAd;MAC9E,IAAI,KAAKlJ,KAAL,CAAWoJ,YAAX,IAA2BN,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAxD,EAAsEC,OAAO,CAACC,KAAR,CAAc,kDAAd;MACtE,KAAKnJ,UAAL,CAAgB,KAAKC,KAArB;IACD;;;8CAEyB6H,S,EAAW;MACnC,IAAI,KAAKD,cAAL,CAAoBC,SAApB,CAAJ,EAAoC,KAAK3F,MAAL,CAAY,IAAZ,EAAkB2F,SAAlB;;MAEpC,IAAIA,SAAS,CAAC5G,IAAV,KAAmB,IAAnB,IAA2B,KAAK9B,KAAL,KAAe0I,SAAS,CAAC5G,IAAxD,EAA8D;QAC5D,KAAKxB,gBAAL,GAAwB,IAAxB;QACA,KAAKN,KAAL,GAAa0I,SAAS,CAAC5G,IAAvB;MACD;IACF;;;yCAEoB;MACnB,IAAI,KAAKxB,gBAAT,EAA2B;QACzB,KAAKA,gBAAL,GAAwB,KAAxB;QACA,KAAKN,KAAL,GAAa,KAAK8B,IAAL,CAAU,OAAV,CAAb,GAAkC,KAAKiC,KAAL,CAAW,OAAX,CAAlC;MACD;IACF;;;qCAmGgBK,K,EAAO;MACtB,IAAI8F,gBAAgB,GAAG,KAAKlK,KAAL,GAAaoE,KAAK,GAAG,CAArB,GAAyB,KAAKE,mBAAL,EAAhD;MACA,IAAI,CAAC4F,gBAAL,EAAuB,OAAO,KAAKlK,KAAZ,CAAvB,KACK,OAAO,KAAKA,KAAL,GAAawE,IAAI,CAACS,GAAL,CAASb,KAAT,IAAkB,KAAKrD,eAAL,KAAyB,KAAKF,KAAL,CAAWsJ,YAA1E;IACN;;;4CA8GuB;MACtB,IAAI,KAAKtJ,KAAL,CAAWuJ,eAAX,KAA+B,IAAnC,EAAyC,OAAO,IAAP;MACzC,IAAI,KAAKvJ,KAAL,CAAWuJ,eAAX,KAA+B,QAA/B,IAA2C,KAAKpK,KAAL,KAAe,KAA9D,EAAqE,OAAO,IAAP;MACrE,IAAI,KAAKa,KAAL,CAAWuJ,eAAX,KAA+B,MAA/B,IAAyC,KAAKpK,KAAL,KAAe,IAA5D,EAAkE,OAAO,IAAP;MAClE,OAAO,KAAP;IACD;;;+CA8F0B;MACzB,IAAI,CAAC,KAAKa,KAAL,CAAWuJ,eAAhB,EAAiC;MACjC,IAAIC,aAAa,GAAG,KAAKrG,qBAAL,EAApB;;MACA,IAAI,KAAKP,WAAL,IAAoB,KAAKC,aAA7B,EAA4C;QAC1C,KAAKD,WAAL,CAAiBxB,cAAjB,CAAgC;UAAEqI,aAAa,EAAED,aAAa,IAAI,KAAKrK,KAAtB,GAA8B,MAA9B,GAAuC;QAAxD,CAAhC;QACA,KAAK0D,aAAL,CAAmBzB,cAAnB,CAAkC;UAAEqI,aAAa,EAAED,aAAa,IAAI,CAAC,KAAKrK,KAAvB,GAA+B,MAA/B,GAAwC;QAAzD,CAAlC;MACD;IACF;;;2CAEsB;MACrB,IAAI,KAAKO,kBAAT,EAA6BgK,kBAAkB,CAACzC,sBAAnB,CAA0C,KAAKvH,kBAA/C;MAC7B,IAAI,KAAKM,KAAL,CAAW2J,qBAAf,EAAsC,KAAKjK,kBAAL,GAA0BgK,kBAAkB,CAACE,uBAAnB,EAA1B;IACvC;;;6CAEwB;MACvB,IAAI,KAAKlK,kBAAT,EAA6BgK,kBAAkB,CAACzC,sBAAnB,CAA0C,KAAKvH,kBAA/C;IAC9B;;;6BA2FQ;MACP,IAAImK,KAAK,GAAG,KAAK7J,KAAL,CAAWmB,IAAX,KAAoB,SAApB,GAAgC,KAAK2I,UAAL,EAAhC,GAAoD,KAAKC,YAAL,EAAhE;MACA,IAAIC,MAAM,GAAG,KAAKhK,KAAL,CAAWmB,IAAX,KAAoB,SAApB,GAAgC,KAAK4I,YAAL,EAAhC,GAAsD,KAAKD,UAAL,EAAnE;MAEA,OACE,oBAAC,IAAD;QACE,GAAG,EAAC,iBADN;QAEE,QAAQ,EAAE,KAAKzC,iBAFjB;QAGE,KAAK,EAAE,KAAK/F,UAAL,CAAgBhB,SAHzB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAKGuJ,KALH,EAMGG,MANH,CADF;IAUD;;;iCAEY;MAAA;;MACX,OACE,oBAAC,IAAD,eACM,KAAKvI,SAAL,CAAewI,WADrB;QAEE,GAAG,EAAC,MAFN;QAGE,GAAG,EAAE,aAAAC,CAAC;UAAA,OAAI,MAAI,CAACxJ,IAAL,GAAYwJ,CAAhB;QAAA,CAHR;QAIE,KAAK,EAAE,CAAC,KAAK5I,UAAL,CAAgBZ,IAAjB,EAAuB;UAAC+G,MAAM,EAAE,KAAKQ,aAAL,EAAT;UAA+BT,KAAK,EAAE,KAAKQ,YAAL;QAAtC,CAAvB,CAJT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,IAMG,KAAKhI,KAAL,CAAWmK,QANd,EAOE,oBAAC,IAAD;QACE,aAAa,EAAG,KAAKhL,KAAL,IAAc,KAAKgE,qBAAL,EAAd,GAA6C,MAA7C,GAAsD,MADxE;QAEE,GAAG,EAAE,aAAA+G,CAAC;UAAA,OAAI,MAAI,CAACtH,WAAL,GAAmBsH,CAAvB;QAAA,CAFR;QAGE,KAAK,EAAE,CAAC7J,MAAM,CAAC+J,OAAR,EAAiB,KAAKpK,KAAL,CAAWK,MAAX,IAAqB,KAAKL,KAAL,CAAWK,MAAX,CAAkBuC,WAAxD,CAHT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAPF,CADF;IAeD;;;mCAEc;MAAA;;MACb,OACE,oBAAC,IAAD,eACM,KAAKnB,SAAL,CAAewI,WADrB;QAEE,GAAG,EAAC,QAFN;QAGE,GAAG,EAAE,aAAAC,CAAC;UAAA,OAAI,MAAI,CAACpK,MAAL,GAAcoK,CAAlB;QAAA,CAHR;QAIE,SAAS,EAAE,KAAKlK,KAAL,CAAWqK,SAJxB;QAKE,KAAK,EAAE,CAAC,KAAK/I,UAAL,CAAgBxB,MAAjB,EAAyB;UAAC2H,MAAM,EAAE,KAAKW,eAAL,EAAT;UAAiCZ,KAAK,EAAE,KAAKW,cAAL;QAAxC,CAAzB,CALT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,IAOG,KAAKnI,KAAL,CAAWsK,OAPd,EAQE,oBAAC,IAAD;QACE,aAAa,EAAG,CAAC,KAAKnL,KAAN,IAAe,KAAKgE,qBAAL,EAAf,GAA8C,MAA9C,GAAuD,MADzE;QAEE,GAAG,EAAE,aAAA+G,CAAC;UAAA,OAAI,MAAI,CAACrH,aAAL,GAAqBqH,CAAzB;QAAA,CAFR;QAGE,KAAK,EAAE,CAAC7J,MAAM,CAAC+J,OAAR,EAAiB,KAAKpK,KAAL,CAAWK,MAAX,IAAqB,KAAKL,KAAL,CAAWK,MAAX,CAAkBwC,aAAxD,CAHT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EARF,CADF;IAgBD;;;;EAxlBiCxE,S;;AAAfS,M,CAeZyL,Y,GAAe;EACpBC,QAAQ,EAAE,kBAAClI,KAAD,EAA0B;IAAA,IAAlBpB,IAAkB,uEAAX,MAAW;;IAClC,IAAIpB,MAAM,uBAAMoB,IAAN,EAAc,CAAC,GAAD,IAAQ,IAAIoB,KAAZ,CAAd,CAAV;;IACA,OAAO;MAAExC,MAAM,EAANA;IAAF,CAAP;EACD;AAJmB,C;AAfHhB,M,CA0BZ2L,S,GAAY;EACjBpF,eAAe,EAAE/G,SAAS,CAACoM,IADV;EAEjBlH,SAAS,EAAElF,SAAS,CAACoM,IAFJ;EAGjBvF,SAAS,EAAE7G,SAAS,CAACoM,IAHJ;EAIjBhG,iBAAiB,EAAEpG,SAAS,CAACoM,IAJZ;EAKjBnB,eAAe,EAAEjL,SAAS,CAACqM,KAAV,CAAgB,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,EAAsB,QAAtB,CAAhB,CALA;EAMjBR,QAAQ,EAAE7L,SAAS,CAACsM,IANH;EAOjBpC,kBAAkB,EAAElK,SAAS,CAACuM,SAAV,CAAoB,CAACvM,SAAS,CAACwM,MAAX,EAAmBxM,SAAS,CAACyM,IAA7B,CAApB,CAPH;EAQjBT,OAAO,EAAEhM,SAAS,CAACsM,IARF;EASjBjG,QAAQ,EAAErG,SAAS,CAACoM,IATH;EAUjBL,SAAS,EAAE/L,SAAS,CAACwM,MAVJ;EAWjB9J,cAAc,EAAE1C,SAAS,CAACoM,IAXT;EAYjBzJ,IAAI,EAAE3C,SAAS,CAACoM,IAZC;EAajBrH,YAAY,EAAE/E,SAAS,CAACoM,IAbP;EAcjBvD,OAAO,EAAE7I,SAAS,CAACyM,IAdF;EAejB7D,YAAY,EAAE5I,SAAS,CAACyM,IAfP;EAgBjB/D,MAAM,EAAE1I,SAAS,CAACyM,IAhBD;EAiBjBzE,WAAW,EAAEhI,SAAS,CAACyM,IAjBN;EAkBjB/G,WAAW,EAAE1F,SAAS,CAACyM,IAlBN;EAmBjBxC,gBAAgB,EAAEjK,SAAS,CAACuM,SAAV,CAAoB,CAACvM,SAAS,CAACwM,MAAX,EAAmBxM,SAAS,CAACyM,IAA7B,CAApB,CAnBD;EAoBjBzB,YAAY,EAAEhL,SAAS,CAACwM,MApBP;EAqBjBzC,YAAY,EAAE/J,SAAS,CAACwM,MArBP;EAsBjBxC,WAAW,EAAEhK,SAAS,CAACwM,MAtBN;EAuBjB5J,IAAI,EAAE5C,SAAS,CAACqM,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,CAAhB,CAvBW;EAwBjBtK,MAAM,EAAE/B,SAAS,CAAC0M,MAxBD;EAyBjB5F,UAAU,EAAE9G,SAAS,CAACoM,IAzBL;EA0BjBjE,aAAa,EAAEnI,SAAS,CAACwM,MA1BR;EA2BjBnE,WAAW,EAAErI,SAAS,CAAC2M,MA3BN;EA4BjBvI,YAAY,EAAEpE,SAAS,CAACyM,IA5BP;EA6BjB5J,IAAI,EAAE7C,SAAS,CAACqM,KAAV,CAAgB,CAAC,SAAD,EAAY,QAAZ,EAAsB,UAAtB,CAAhB,CA7BW;EA8BjBhB,qBAAqB,EAAErL,SAAS,CAACoM,IA9BhB;EAiCjBvB,oBAAoB,EAAE7K,SAAS,CAACoM,IAjCf;EAkCjB7B,mBAAmB,EAAEvK,SAAS,CAAC4M;AAlCd,C;AA1BApM,M,CA+DZqM,Y,GAAe;EACpBlK,IAAI,EAAE,IADc;EAEpBD,cAAc,EAAE,KAFI;EAIpBG,IAAI,EAAE,UAJc;EAKpBqH,kBAAkB,EAAE,CALA;EAMpBD,gBAAgB,EAAE,CANE;EAOpBe,YAAY,EAAE,IAPM;EAQpBhB,WAAW,EAAE,IARO;EASpBD,YAAY,EAAE,IATM;EAWpB3F,YAAY,EAAE,IAXM;EAYpB+D,aAAa,EAAE,GAZK;EAapBE,WAAW,EAAE,QAbO;EAepBhC,QAAQ,EAAE,KAfU;EAgBpBtB,YAAY,EAAE,KAhBM;EAiBpBkG,eAAe,EAAE,MAjBG;EAkBpBlE,eAAe,EAAE,KAlBG;EAmBpBF,SAAS,EAAE,KAnBS;EAoBpB3B,SAAS,EAAE,IApBS;EAqBpBkB,iBAAiB,EAAE,IArBC;EAsBpBU,UAAU,EAAE,KAtBQ;EAwBpB/E,MAAM,EAAE,EAxBY;EAyBpBgK,SAAS,EAAE,CAzBS;EA0BpBrD,MAAM,EAAE,kBAAM,CAAE,CA1BI;EA2BpBG,OAAO,EAAE,mBAAM,CAAE,CA3BG;EA4BpBjG,IAAI,EAAE,MA5Bc;EA8BpByI,qBAAqB,EAAE;AA9BH,C;AA/DH7K,M,CAiGZsM,Y,GAAe;EAAEtL,MAAM,EAAExB,SAAS,CAAC0M;AAApB,C;AAjGHlM,M,CAkGZuM,iB,GAAoB;EAAEvL,MAAM,EAAExB,SAAS,CAAC0M;AAApB,C;SAlGRlM,M;AA2lBrB,IAAMuB,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;EAC/B4I,OAAO,EAAE;IACPkB,KAAK,EAAE,CADA;IAEPvK,IAAI,EAAE,CAFC;IAGPD,GAAG,EAAE,CAHE;IAIPyK,MAAM,EAAE,CAJD;IAKP5K,QAAQ,EAAE,UALH;IAMP6K,eAAe,EAAE;EANV;AADsB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}