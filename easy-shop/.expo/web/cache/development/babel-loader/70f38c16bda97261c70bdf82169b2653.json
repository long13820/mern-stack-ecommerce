{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport Toast from \"react-native-toast-message\";\nimport baseURL from \"../../assets/common/baseUrl\";\nexport var SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport var loginUser = function loginUser(user, dispatch) {\n  fetch(baseURL + \"users/login\", {\n    method: \"POST\",\n    body: JSON.stringify(user),\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    if (data) {\n      var token = data.token;\n      AsyncStorage.setItem(\"jwt\", token);\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded, user));\n    } else {\n      logoutUser(dispatch);\n    }\n  }).catch(function (err) {\n    Toast.show({\n      topOffset: 60,\n      type: \"error\",\n      text1: \"Please provide correct credentials\",\n      text2: \"\"\n    });\n    logoutUser(dispatch);\n  });\n};\nexport var getUserProfile = function getUserProfile(id) {\n  fetch(baseURL + \"users/\" + id, {\n    method: \"GET\",\n    body: JSON.stringify(user),\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return console.log(data);\n  });\n};\nexport var logoutUser = function logoutUser(dispatch) {\n  AsyncStorage.removeItem(\"jwt\");\n  dispatch(setCurrentUser({}));\n};\nexport var setCurrentUser = function setCurrentUser(decoded, user) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n    userProfile: user\n  };\n};","map":{"version":3,"names":["jwt_decode","AsyncStorage","Toast","baseURL","SET_CURRENT_USER","loginUser","user","dispatch","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","data","token","setItem","decoded","setCurrentUser","logoutUser","catch","err","show","topOffset","type","text1","text2","getUserProfile","id","console","log","removeItem","payload","userProfile"],"sources":["D:/GitHub/mern-stack-ecommerce/easy-shop/Context/actions/Auth.actions.js"],"sourcesContent":["import jwt_decode from \"jwt-decode\"\r\nimport AsyncStorage from \"@react-native-community/async-storage\"\r\nimport Toast from \"react-native-toast-message\"\r\nimport baseURL from \"../../assets/common/baseUrl\"\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const loginUser = (user, dispatch) => {\r\n    fetch(`${baseURL}users/login`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        if (data) {\r\n            const token = data.token;\r\n            AsyncStorage.setItem(\"jwt\", token)\r\n            const decoded = jwt_decode(token)\r\n            dispatch(setCurrentUser(decoded, user))\r\n        } else {\r\n           logoutUser(dispatch)\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        Toast.show({\r\n            topOffset: 60,\r\n            type: \"error\",\r\n            text1: \"Please provide correct credentials\",\r\n            text2: \"\"\r\n        });\r\n        logoutUser(dispatch)\r\n    });\r\n};\r\n\r\nexport const getUserProfile = (id) => {\r\n    fetch(`${baseURL}users/${id}`, {\r\n        method: \"GET\",\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => console.log(data));\r\n}\r\n\r\nexport const logoutUser = (dispatch) => {\r\n    AsyncStorage.removeItem(\"jwt\");\r\n    dispatch(setCurrentUser({}))\r\n}\r\n\r\nexport const setCurrentUser = (decoded, user) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded,\r\n        userProfile: user\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,OAAP;AAEA,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,QAAP,EAAoB;EACzCC,KAAK,CAAIL,OAAJ,kBAA0B;IAC3BM,MAAM,EAAE,MADmB;IAE3BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFqB;IAG3BO,OAAO,EAAE;MACLC,MAAM,EAAE,kBADH;MAEL,gBAAgB;IAFX;EAHkB,CAA1B,CAAL,CAQCC,IARD,CAQM,UAACC,GAAD;IAAA,OAASA,GAAG,CAACC,IAAJ,EAAT;EAAA,CARN,EASCF,IATD,CASM,UAACG,IAAD,EAAU;IACZ,IAAIA,IAAJ,EAAU;MACN,IAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;MACAlB,YAAY,CAACmB,OAAb,CAAqB,KAArB,EAA4BD,KAA5B;MACA,IAAME,OAAO,GAAGrB,UAAU,CAACmB,KAAD,CAA1B;MACAZ,QAAQ,CAACe,cAAc,CAACD,OAAD,EAAUf,IAAV,CAAf,CAAR;IACH,CALD,MAKO;MACJiB,UAAU,CAAChB,QAAD,CAAV;IACF;EACJ,CAlBD,EAmBCiB,KAnBD,CAmBO,UAACC,GAAD,EAAS;IACZvB,KAAK,CAACwB,IAAN,CAAW;MACPC,SAAS,EAAE,EADJ;MAEPC,IAAI,EAAE,OAFC;MAGPC,KAAK,EAAE,oCAHA;MAIPC,KAAK,EAAE;IAJA,CAAX;IAMAP,UAAU,CAAChB,QAAD,CAAV;EACH,CA3BD;AA4BH,CA7BM;AA+BP,OAAO,IAAMwB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAQ;EAClCxB,KAAK,CAAIL,OAAJ,cAAoB6B,EAApB,EAA0B;IAC3BvB,MAAM,EAAE,KADmB;IAE3BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFqB;IAG3BO,OAAO,EAAE;MACLC,MAAM,EAAE,kBADH;MAEL,gBAAgB;IAFX;EAHkB,CAA1B,CAAL,CAQCC,IARD,CAQM,UAACC,GAAD;IAAA,OAASA,GAAG,CAACC,IAAJ,EAAT;EAAA,CARN,EASCF,IATD,CASM,UAACG,IAAD;IAAA,OAAUe,OAAO,CAACC,GAAR,CAAYhB,IAAZ,CAAV;EAAA,CATN;AAUH,CAXM;AAaP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAAChB,QAAD,EAAc;EACpCN,YAAY,CAACkC,UAAb,CAAwB,KAAxB;EACA5B,QAAQ,CAACe,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,CAHM;AAKP,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACD,OAAD,EAAUf,IAAV,EAAmB;EAC7C,OAAO;IACHsB,IAAI,EAAExB,gBADH;IAEHgC,OAAO,EAAEf,OAFN;IAGHgB,WAAW,EAAE/B;EAHV,CAAP;AAKH,CANM"},"metadata":{},"sourceType":"module"}