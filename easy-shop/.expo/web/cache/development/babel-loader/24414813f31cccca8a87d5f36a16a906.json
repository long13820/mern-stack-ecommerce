{"ast":null,"code":"import * as _ from 'lodash';\nexport default function mergeComponentAndThemeStyles(componentStyle, themeComponentStyle, themeStyle) {\n  var componentThemedStyle = _.merge({}, componentStyle, themeComponentStyle);\n\n  var intersectedRootThemeStyle = _.pick(themeStyle, _.keys(componentThemedStyle));\n\n  return _.merge({}, intersectedRootThemeStyle, componentThemedStyle);\n}","map":{"version":3,"names":["_","mergeComponentAndThemeStyles","componentStyle","themeComponentStyle","themeStyle","componentThemedStyle","merge","intersectedRootThemeStyle","pick","keys"],"sources":["D:/GitHub/mern-stack-ecommerce/easy-shop/node_modules/native-base-shoutem-theme/src/mergeComponentAndThemeStyles.js"],"sourcesContent":["import * as _ from 'lodash';\r\n\r\nexport default function mergeComponentAndThemeStyles(\r\n  componentStyle, themeComponentStyle, themeStyle) {\r\n  const componentThemedStyle = _.merge({}, componentStyle, themeComponentStyle);\r\n\r\n  // Picking only required root theme style, used by component.\r\n  // We do not want to merge whole theme to component style.\r\n  const intersectedRootThemeStyle = _.pick(themeStyle, _.keys(componentThemedStyle));\r\n\r\n  // Merging only common style, not all theme style with component style\r\n  return _.merge({}, intersectedRootThemeStyle, componentThemedStyle);\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,QAAnB;AAEA,eAAe,SAASC,4BAAT,CACbC,cADa,EACGC,mBADH,EACwBC,UADxB,EACoC;EACjD,IAAMC,oBAAoB,GAAGL,CAAC,CAACM,KAAF,CAAQ,EAAR,EAAYJ,cAAZ,EAA4BC,mBAA5B,CAA7B;;EAIA,IAAMI,yBAAyB,GAAGP,CAAC,CAACQ,IAAF,CAAOJ,UAAP,EAAmBJ,CAAC,CAACS,IAAF,CAAOJ,oBAAP,CAAnB,CAAlC;;EAGA,OAAOL,CAAC,CAACM,KAAF,CAAQ,EAAR,EAAYC,yBAAZ,EAAuCF,oBAAvC,CAAP;AACD"},"metadata":{},"sourceType":"module"}